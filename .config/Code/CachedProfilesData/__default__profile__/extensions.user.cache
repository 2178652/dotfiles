{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/cgar/.vscode/extensions/extensions.json","path":"/home/cgar/.vscode/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1760904444667,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"validate":true,"productVersion":"1.104.3","productDate":"2025-10-02T12:30:51.747Z","productCommit":"385651c938df8a906869babee516bffd0ddb9829","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"espressif.esp-idf-extension","uuid":"2f6509f0-2abc-4e12-91e8-91b6ff24c654"},"manifest":{"name":"esp-idf-extension","displayName":"ESP-IDF","description":"Develop and debug applications for Espressif chips with ESP-IDF","version":"1.10.2","license":"Apache-2.0","publisher":"espressif","icon":"media/espressif_icon.png","galleryBanner":{"color":"#636363","theme":"dark"},"engines":{"vscode":"^1.82.0"},"repository":{"type":"git","url":"https://github.com/espressif/vscode-esp-idf-extension.git"},"categories":["Programming Languages","Snippets","Other","Debuggers"],"keywords":["arduino-esp32","bluetooth","ESP-IDF","ESP-ADF","ESP-MDF","ESP-matter","ESP","Espressif","ESP32","ESP32-C2","ESP32-C3","ESP32-H2","ESP32-P4","ESP32-S2","ESP32-S3","esp32","esp32c2","esp32c3","esp32c6","esp32h2","esp32s2","esp32s3","esp32p4","matter","iot","wifi","soc"],"activationEvents":["onCommand:espIdf.createFiles","onCommand:espIdf.addArduinoAsComponentToCurFolder","onCommand:espIdf.createIdfTerminal","onCommand:espIdf.createVsCodeFolder","onCommand:espIdf.selectConfTarget","onCommand:espIdf.menuconfig.start","onCommand:espIdf.cmakeListsEditor.start","onCommand:espIdf.selectPort","onCommand:espIdf.setTarget","onCommand:espIdf.buildDevice","onCommand:espIdf.flashDevice","onCommand:espIdf.flashDFU","onCommand:espIdf.monitorDevice","onCommand:espIdf.pickAWorkspaceFolder","onCommand:espIdf.buildFlashMonitor","onCommand:espIdf.cleanProject","onCommand:espIdf.eraseFlash","onCommand:espIdf.size","onCommand:espIdf.fullClean","onCommand:espIdf.apptrace","onCommand:espIdf.heaptrace","onCommand:espIdf.openOCDCommand","onCommand:espIdf.apptrace.archive.refresh","onCommand:espIdf.apptrace.archive.showReport","onCommand:espIdf.apptrace.customize","onCommand:espIdf.getExtensionPath","onCommand:espIdf.getIDFTarget","onCommand:espIdf.getOpenOcdConfigs","onCommand:espIdf.genCoverage","onCommand:espIdf.partition.table.refresh","onCommand:espIdf.removeCoverage","onCommand:espIdf.searchInEspIdfDocs","onCommand:espIdf.setup.start","onCommand:espIdf.welcome.start","onCommand:espIdf.examples.start","onCommand:esp.rainmaker.backend.connect","onCommand:esp.rainmaker.backend.sync","onCommand:espIdf.getEspAdf","onCommand:espIdf.getEspMdf","onCommand:espIdf.getEspMatter","onCommand:espIdf.getEspRainmaker","onCommand:espIdf.installEspMatterPyReqs","onCommand:espIdf.installPyReqs","onCommand:esp.webview.open.partition-table","onCommand:espIdf.webview.nvsPartitionEditor","onCommand:espIdf.selectOpenOcdConfigFiles","onCommand:espIdf.doctorCommand","onCommand:espIdf.createNewComponent","onCommand:espIdf.ninja.summary","onCommand:espIdf.newProject.start","onCommand:espIdf.setGcovConfig","onCommand:esp.component-manager.ui.show","onCommand:espIdf.monitorQemu","onView:idfAppTracer","onView:idfAppTraceArchive","onView:idfPartitionExplorer","onView:espRainmaker","onView:idfComponents","workspaceContains:**/project_description.json","workspaceContains:**/sdkconfig","workspaceContains:**/CMakeLists.txt"],"main":"./dist/extension","l10n":"./l10n","contributes":{"walkthroughs":[{"id":"espIdf.walkthrough.basic-usage","title":"ESP-IDF Basic Usage Guide","description":"Learn how to configure the ESP-IDF extension and use its basic features in VS Code","steps":[{"id":"introduction","title":"Introduction to ESP-IDF in VS Code","description":"This walkthrough will guide you through configuring the ESP-IDF extension and demonstrate its basic usage in Visual Studio Code.","media":{"markdown":"walkthroughs/basic/basic-usage-intro.md"}},{"id":"extension-configuration","title":"Configuring the ESP-IDF Extension","description":"‚ùó**Linux and MacOS users:** Please install prerequisites first. The process is quick and simple - follow the steps in our [ESP-IDF install documentation](https://docs.espressif.com/projects/esp-idf/en/latest/esp32/get-started/linux-macos-setup.html#step-1-install-prerequisites).\n\nOnce ready, let's configure the ESP-IDF extension:\n\n[Configure ESP-IDF Extension](command:espIdf.setup.start)\n\n","media":{"markdown":"walkthroughs/basic/configuration.md"}},{"id":"create-example-project","title":"Creating an Example Project","description":"Now, let's create a new project from ESP-IDF examples:\n\n[Show Example Projects](command:espIdf.examples.start)\n\nüí° Explore different examples to find one that suits your needs.","media":{"markdown":"walkthroughs/basic/create-project.md"}},{"id":"setup-project","title":"Setting Up Your Project","description":"Before building your project, you'll need to configure some essential settings:\n\n1. Configure your target device\n\n[Set Espressif Device Target](command:espIdf.setTarget)\n2. Set up project-specific configurations (not needed in our example)\n3. Select serial port \n\n[Select Port to Use](command:espIdf.selectPort)\n4. Select flashing method \n\n[Select Flash Method](command:espIdf.selectFlashMethodAndFlash)","media":{"markdown":"walkthroughs/basic/setup-project.md"}},{"id":"build-flash-monitor","title":"Building, Flashing, and Monitoring","description":"Now that your project is configured, let's build the code, flash it to your device, and monitor the output.\n\nYou can perform these operations individually or all at once using the 'Build, Flash and Monitor' command.\n\n[Build, Flash and Monitor](command:espIdf.buildFlashMonitor)","media":{"markdown":"walkthroughs/basic/build-flash-monitor.md"}},{"id":"additional-resources-and-ui","title":"Additional Resources and UI Exploration","description":"As a next step, we recommend that you go through the Advanced Walkthrough as well.\n\n[Start Advanced Features Guide Walkthrough](command:workbench.action.openWalkthrough?%22espressif.esp-idf-extension%23espIdf.walkthrough.advanced%22)","media":{"markdown":"walkthroughs/basic/additional-resources.md"}}]},{"id":"espIdf.walkthrough.advanced","title":"ESP-IDF Advanced Features Guide","description":"Explore advanced features and tools for ESP-IDF development in VS Code","steps":[{"id":"advanced-introduction","title":"Introduction to Advanced Features","description":"Overview of advanced ESP-IDF development capabilities.\n\n**Prerequisites:**\n - Completed the Basic Usage Guide\n - Basic familiarity with ESP-IDF concepts\n - Have a working ESP-IDF setup\n - Have your development board ready\n - JTAG debugging hardware (for debugging features)","media":{"markdown":"walkthroughs/advanced/advanced-intro.md"}},{"id":"troubleshooting","title":"Troubleshooting Guide","description":"Learn about common troubleshooting techniques and how to get help when you need it.\n\nKey features:\n- Debug logging configuration\n- Environment diagnostics\n- Log file locations\n- Common issues and solutions\n\n[Run Doctor Command](command:espIdf.doctorCommand)","media":{"markdown":"walkthroughs/advanced/troubleshooting.md"}},{"id":"sdk-configuration","title":"SDK Configuration (menuconfig)","description":"Learn how to customize your project's configuration using menuconfig\nKey features:\n- Component configuration\n- Compiler options\n- Flash and partition settings\n- Serial port parameters\n\nüí° Tip: Use search bar to quickly find settings","media":{"markdown":"walkthroughs/advanced/sdk-configuration.md"}},{"id":"debugging","title":"Debugging Your Application","description":"Learn how to debug your ESP-IDF applications using VS Code\n\nKey features:\n- Conditional breakpoints\n- Navigating through the code, call stack and threads\n- Halting the target manually\n- Watching and setting program variables\n- Disassembly view\n- Sending GDB Commands\n- Peripheral Viewer","media":{"markdown":"walkthroughs/advanced/debug-project.md"}},{"id":"component-installation","title":"Installing ESP-IDF Components","description":"Learn how to enhance your project with ESP Component Registry and Arduino-ESP32 integration.\n\n- Browse and install ESP components\n- Add Arduino-ESP32 as a component\n- Create projects from component examples\n\n[Open ESP Component Registry](command:esp.component-manager.ui.show)","media":{"markdown":"walkthroughs/advanced/component-installation.md"}},{"id":"app-size-analysis","title":"Application Size Analysis","description":"ESP-IDF Extension provides powerful tools to analyze your application's memory usage, helping you optimize storage allocation. \n\n[Open Size Analysis](command:espIdf.size)","media":{"markdown":"walkthroughs/advanced/app-size-analysis.md"}},{"id":"partition-table","title":"Partition Table Configuration","description":"The Partition Table Editor provides a user-friendly interface to define and modify your ESP32's flash memory layout.\nKey features\n- Visual partition table editing interface\n- Automatic CSV file generation and management\n- Direct integration with ESP-IDF build systemReal-time validation of partition configurations\n\n[Open Partition Editor](command:esp.webview.open.partition-table)","media":{"markdown":"walkthroughs/advanced/partition-table.md"}},{"id":"unit-testing","title":"Unit Testing","description":"Set up and run unit tests for your ESP-IDF projects.\n\n- Configure test environment\n- Write and run tests\n- Analyze test results\n\n[Open Testing View](command:testing.viewExplorer)","media":{"markdown":"walkthroughs/advanced/unit-testing.md"}},{"id":"multi-project","title":"Multi-Project Management","description":"Learn to efficiently manage multiple ESP-IDF projects in a single workspace.","media":{"markdown":"walkthroughs/advanced/multi-project.md"}},{"id":"conclusion","title":"Next Steps","description":"Congratulations! You've learned about essential advanced features of ESP-IDF development.\n\nNext steps:\n- Explore additional tools in ESP-IDF documentation\n- Join the ESP32 community forum\n- Check out example projects\n\n[Visit Our Documentation](https://docs.espressif.com/projects/vscode-esp-idf-extension/en/latest/additionalfeatures.html)","media":{"markdown":"walkthroughs/advanced/advanced-conclusion.md"}}]}],"problemMatchers":[{"name":"espIdf","owner":"cpp","fileLocation":["autoDetect","${workspaceFolder}"],"pattern":{"regexp":"^\\.?\\.?(.*?):(\\d+):(\\d*):?\\s+(?:fatal\\s+)?(warning|error):\\s+(.*)$","file":1,"line":2,"column":3,"severity":4,"message":5}},{"name":"espIdfLd","owner":"cpp","fileLocation":["autoDetect","${workspaceFolder}"],"severity":"error","pattern":{"regexp":"^.+\\/bin\\/ld[^:]+:\\s*(.+):(\\d+):(.+)$","file":1,"line":2,"message":3}}],"viewsContainers":{"panel":[{"id":"espIdfHints","title":"ESP-IDF","icon":"media/dep.svg"}],"activitybar":[{"id":"idfViewController","title":"ESP-IDF: Explorer","icon":"media/esp.svg"}]},"views":{"espIdfHints":[{"id":"errorHints","name":"Error Hints","title":"Error Hints ($errorHints.count$)"}],"debug":[{"name":"ESP-IDF: Peripheral Viewer","id":"espIdf.peripheralView"},{"name":"ESP-IDF: Hex View","id":"espIdf.hexView"}],"idfViewController":[{"id":"idfCommands","name":"Commands","visibility":"visible"},{"id":"idfSearchResults","name":"Documentation Search Results","visibility":"collapsed"},{"id":"idfPartitionExplorer","name":"Device Partition Explorer","visibility":"collapsed"},{"id":"idfAppTracer","name":"Application Tracer","visibility":"collapsed"},{"id":"idfAppTraceArchive","name":"Application Tracer Archives","visibility":"collapsed"},{"id":"espRainmaker","name":"RainMaker","visibility":"collapsed"},{"id":"espEFuseExplorer","name":"eFuse Explorer","visibility":"collapsed"}],"explorer":[{"id":"idfComponents","name":"Project Components"}]},"viewsWelcome":[{"view":"idfSearchResults","contents":"On any opened file editor, select some text, right click and select ESP-IDF: Search in Documentation to get matching results here.\n\nResults are based on your current VS Code language and idf.espIdfPath version (latest otherwise)."},{"view":"idfPartitionExplorer","contents":"Show the partition list from your device with the option to flash binaries (.bin) to the selected partition.\n\nSelect your device serial port and click Refresh Partition Table."},{"view":"espIdf.peripheralView","contents":"Show peripheral registers from SVD files defined in ESP-IDF SVD file path (idf.svdFilePath) configuration setting during active debug session."}],"menus":{"extension/context":[{"command":"espIdf.openWalkthrough","when":"extension =~ /^espressif.esp-idf-extension$/ && extensionStatus == installed","group":"zzz"}],"editor/title":[{"command":"espIdf.searchError","group":"navigation"}],"view/title":[{"command":"espIdf.searchError","group":"navigation","when":"view == errorHints"},{"command":"espIdf.partition.table.refresh","group":"navigation","when":"view == idfPartitionExplorer"},{"command":"esp.webview.open.partition-table","group":"navigation@2","when":"view == idfPartitionExplorer"},{"command":"espIdf.apptrace.customize","when":"view == idfAppTracer"},{"command":"espIdf.apptrace.archive.refresh","group":"navigation","when":"view == idfAppTraceArchive"},{"command":"esp.rainmaker.backend.connect","group":"navigation","when":"view == espRainmaker && !rainmaker_logged_in"},{"command":"esp.rainmaker.backend.sync","group":"navigation","when":"view == espRainmaker"},{"command":"espIdf.clearDocsSearchResult","group":"navigation","when":"view == idfSearchResults"},{"command":"esp.efuse.summary","group":"navigation","when":"view == espEFuseExplorer"},{"command":"espIdf.efuse.clearResults","group":"navigation","when":"view == espEFuseExplorer"}],"view/item/context":[{"command":"esp.rainmaker.backend.logout","when":"view == espRainmaker && viewItem == account","group":"inline"},{"command":"esp.rainmaker.backend.add_node","when":"view == espRainmaker && viewItem == account","group":"inline"},{"command":"esp.rainmaker.backend.remove_node","when":"view == espRainmaker && viewItem == node","group":"inline"},{"command":"esp.rainmaker.backend.update_node_param","when":"view == espRainmaker && viewItem == param","group":"inline"},{"command":"espIdf.hexView.copyValue","when":"view == espIdf.hexView && viewItem == debugHexItem","group":"inline"},{"command":"espIdf.hexView.deleteElement","when":"view == espIdf.hexView && viewItem == debugHexItem","group":"inline"}],"editor/context":[{"command":"espIdf.searchError"},{"command":"espIdf.searchInEspIdfDocs","group":"navigation","when":"editorHasSelection"}],"explorer/context":[{"when":"resourceFilename == sdkconfig","command":"espIdf.menuconfig.start","group":"navigation"},{"when":"resourceFilename == CMakeLists.txt || resourceFilename =~ /^sdkconfig.*$/","command":"espIdf.saveDefSdkconfig","group":"2_workspace"},{"when":"resourceExtname == .bin","group":"navigation","command":"espIdf.flashBinaryToPartition"},{"when":"resourceExtname == .csv","group":"navigation","command":"espIdf.webview.nvsPartitionEditor"},{"when":"resourceExtname == .csv","group":"navigation","command":"esp.webview.open.partition-table"},{"when":"resourceFilename == CMakeLists.txt","command":"espIdf.cmakeListsEditor.start","group":"navigation"}],"debug/variables/context":[{"command":"espIdf.viewAsHex","when":"inDebugMode && debugType == 'gdbtarget' && debugState == stopped","group":"navigation"}]},"keybindings":[{"command":"espIdf.createFiles","key":"ctrl+e c","mac":"cmd+i c"},{"command":"espIdf.fullClean","key":"ctrl+e x","mac":"cmd+i x"},{"command":"espIdf.eraseFlash","key":"ctrl+e r","mac":"cmd+i r"},{"command":"espIdf.buildDevice","key":"ctrl+e b","mac":"cmd+i b"},{"command":"espIdf.flashDevice","key":"ctrl+e f","mac":"cmd+i f"},{"command":"espIdf.monitorDevice","key":"ctrl+e m","mac":"cmd+i m"},{"command":"espIdf.newProject.start","key":"ctrl+e n","mac":"cmd+i n"},{"command":"espIdf.createIdfTerminal","key":"ctrl+e t","mac":"cmd+i t"},{"command":"espIdf.selectPort","key":"ctrl+e p","mac":"cmd+i p"},{"command":"espIdf.buildFlashMonitor","key":"ctrl+e d","mac":"cmd+i d"},{"command":"espIdf.menuconfig.start","key":"ctrl+e g","mac":"cmd+i g"},{"command":"espIdf.size","key":"ctrl+e s","mac":"cmd+i s"},{"command":"espIdf.searchInEspIdfDocs","key":"ctrl+e q","mac":"cmd+i q"},{"command":"espIdf.customTask","key":"ctrl+e j","mac":"cmd+i j"}],"configuration":[{"title":"ESP-IDF","properties":{"idf.espIdfPath":{"type":"string","default":"${env:IDF_PATH}","description":"Path to locate ESP-IDF framework (IDF_PATH)","scope":"resource"},"idf.espAdfPath":{"type":"string","default":"${env:ADF_PATH}","description":"Path to locate ESP-ADF framework (ADF_PATH)","scope":"resource"},"idf.espMdfPath":{"type":"string","default":"${env:MDF_PATH}","description":"Path to locate ESP-MDF framework (MDF_PATH)","scope":"resource"},"idf.espMatterPath":{"type":"string","default":"${env:ESP_MATTER_PATH}","description":"Path to locate ESP-Matter framework (ESP_MATTER_PATH)","scope":"resource"},"idf.espHomeKitSdkPath":{"type":"string","default":"${env:HOMEKIT_PATH}","description":"Path to locate ESP-HomeKit-SDK framework (HOMEKIT_PATH)","scope":"resource"},"idf.toolsPath":{"type":"string","default":"${env:IDF_TOOLS_PATH}","description":"Path to locate ESP-IDF Tools (IDF_TOOLS_PATH)","scope":"resource"},"idf.espRainmakerPath":{"type":"string","default":"${env:RMAKER_PATH}","description":"Path to locate ESP-Rainmaker framework (RMAKER_PATH)","scope":"resource"},"idf.espIdfPathWin":{"type":"string","default":"${env:IDF_PATH}","description":"Path to locate ESP-IDF framework (IDF_PATH)","scope":"resource"},"idf.espAdfPathWin":{"type":"string","default":"${env:ADF_PATH}","description":"Path to locate ESP-ADF framework (ADF_PATH)","scope":"resource"},"idf.espMdfPathWin":{"type":"string","default":"${env:MDF_PATH}","description":"Path to locate ESP-MDF framework (MDF_PATH)","scope":"resource"},"idf.toolsPathWin":{"type":"string","default":"${env:IDF_TOOLS_PATH}","description":"Path to locate ESP-IDF Tools (IDF_TOOLS_PATH)","scope":"resource"},"idf.espRainmakerPathWin":{"type":"string","default":"${env:RMAKER_PATH}","description":"Path to locate ESP-Rainmaker framework (RMAKER_PATH)","scope":"resource"},"idf.espHomeKitSdkPathWin":{"type":"string","default":"${env:HOMEKIT_PATH}","description":"Path to locate ESP-HomeKit-SDK framework (HOMEKIT_PATH)","scope":"resource"},"idf.port":{"type":"string","default":"/dev/ttyUSB1","description":"Path of selected device port","scope":"resource"},"idf.portWin":{"type":"string","default":"COM1","description":"Path of selected device port","scope":"resource"},"idf.monitorPort":{"type":"string","default":"","description":"Path of selected device port","scope":"resource"},"idf.pythonInstallPath":{"type":"string","default":"python","description":"Python absolute binary path used to execute ESP-IDF Python scripts","scope":"resource"},"idf.flashBaudRate":{"type":"string","default":"460800","description":"ESP-IDF flash baud rate","scope":"resource"},"idf.monitorBaudRate":{"type":"string","default":"","description":"ESP-IDF monitor baud rate","scope":"resource"},"idf.openOcdConfigs":{"type":"array","default":["interface/ftdi/esp32_devkitj_v1.cfg","board/esp32-wrover.cfg"],"description":"List of configuration files inside OpenOCD scripts directory","scope":"resource","items":{"type":"string"}},"idf.buildPath":{"type":"string","default":"${workspaceFolder}/build","description":"Name of CMake build directory","scope":"resource"},"idf.buildPathWin":{"type":"string","default":"${workspaceFolder}\\build","description":"Name of CMake build directory","scope":"resource"},"idf.cmakeCompilerArgs":{"type":"array","default":["-G","Ninja","-DPYTHON_DEPS_CHECKED=1","-DESP_PLATFORM=1"],"description":"Arguments for CMake compilation task","scope":"resource","items":{"type":"string"}},"idf.sdkconfigDefaults":{"type":"array","default":[],"description":"List of sdkconfig default values for initial build configuration","scope":"resource","items":{"type":"string"}},"idf.ninjaArgs":{"type":"array","default":[],"description":"Arguments for Ninja build task","scope":"resource","items":{"type":"string"}},"idf.customExtraVars":{"description":"Variables to be added to system environment variables","scope":"resource","type":"object","default":{},"additionalProperties":{"type":"string","description":"Env value"}},"idf.useIDFKconfigStyle":{"type":"boolean","default":false,"scope":"resource","description":"Enable/Disable ESP-IDF style validation for Kconfig files"},"idf.showOnboardingOnInit":{"type":"boolean","default":true,"scope":"window","description":"Show ESP-IDF configuration window on extension activation"},"idf.hasWalkthroughBeenShown":{"type":"boolean","default":false,"scope":"application","description":"Has the walkthrough been shown"},"trace.poll_period":{"type":"number","default":1,"scope":"resource","description":"poll_period will be set for the apptrace"},"trace.trace_size":{"type":"number","default":2048,"scope":"resource","description":"trace_size will set for the apptrace"},"trace.stop_tmo":{"type":"number","default":5,"scope":"resource","description":"stop_tmo will be set for the apptrace"},"trace.wait4halt":{"type":"number","default":0,"enum":[0,1],"scope":"resource","description":"wait4halt will be set for the apptrace"},"trace.skip_size":{"type":"number","default":0,"scope":"resource","description":"skip_size will be set for the apptrace"},"idf.saveBeforeBuild":{"type":"boolean","default":true,"scope":"resource","description":"Save all edited files in the workspace before proceeding with the build. If saving fails, the build will proceed regardless"},"idf.notificationMode":{"type":"string","scope":"resource","enum":["Silent","Notifications","Output","All"],"enumDescriptions":["Show no notifications and do not focus on tasks output","Show notifications but do not focus on tasks output","Do not show notifications but focus on tasks output","Show notifications and focus on tasks output"],"default":"All","description":"ESP-IDF extension notifications and output focus mode"},"idf.saveScope":{"type":"number","default":1,"enum":[1,2,3],"enumItemLabels":["Global","Workspace","WorkspaceFolder"],"enumDescriptions":["Global","Workspace","WorkspaceFolder"],"description":"Specify where to save the configuration for ESP-IDF commands. Global, Workspace or WorkspaceFolder","scope":"application"},"idf.telemetry":{"title":"Enable Telemetry","type":"boolean","default":true,"description":"Send anonymous telemetry and crash report back to the extension (change to the settings will require restart for immediate effect)"},"esp.rainmaker.api.server_url":{"type":"string","default":"https://api.rainmaker.espressif.com/v1/","scope":"resource","description":"ESP-Rainmaker cloud server URL"},"esp.rainmaker.oauth.url":{"type":"string","default":"https://auth.rainmaker.espressif.com/oauth2/authorize","scope":"resource","description":"ESP-Rainmaker OAuth server URL"},"idf.coveredLightTheme":{"type":"string","default":"rgba(0,128,0,0.1)","description":"Background color for covered lines in dark theme for ESP-IDF coverage","scope":"resource"},"idf.partialDarkTheme":{"type":"string","default":"rgba(250,218,94,0.1)","description":"Background color for partially covered lines in dark theme for ESP-IDF coverage","scope":"resource"},"idf.partialLightTheme":{"type":"string","default":"rgba(250,218,94,0.1)","description":"Background color for partially covered lines in light theme for ESP-IDF coverage","scope":"resource"},"idf.coveredDarkTheme":{"type":"string","default":"rgba(0,128,0,0.1)","description":"Background color for covered lines in dark theme for ESP-IDF coverage","scope":"resource"},"idf.uncoveredLightTheme":{"type":"string","default":"rgba(255,0,0,0.1)","description":"Background color for uncovered lines in light theme for ESP-IDF coverage","scope":"resource"},"idf.uncoveredDarkTheme":{"type":"string","default":"rgba(255,0,0,0.1)","description":"Background color for uncovered lines in dark theme for ESP-IDF coverage","scope":"resource"},"idf.wssPort":{"type":"number","default":49203,"description":"WebSocket server port for Core Dump or GDB Stub","scope":"resource","minimum":49152,"maximum":65535},"idf.flashType":{"type":"string","enum":["UART","JTAG","DFU"],"description":"Device flash method, UART or JTAG","scope":"resource"},"idf.flashPartitionToUse":{"type":"string","enum":["all","app","bootloader","partition-table"],"default":"all","description":"Specifies the partition to flash during the build and flash process."},"openocd.tcl.host":{"type":"string","description":"Host for OpenOCD TCL Connection","scope":"resource","default":"localhost"},"openocd.tcl.port":{"type":"number","description":"Port for OpenOCD TCL Connection","scope":"resource","default":6666},"openocd.jtag.command.force_unix_path_separator":{"type":"boolean","description":"Forced to use \"/\" instead of \"\\\\\" as path separator for Win32 based OS","default":true},"idf.launchMonitorOnDebugSession":{"type":"boolean","description":"Start IDF monitor along with ESP-IDF Debug Adapter session","scope":"resource","default":false},"idf.enableIdfComponentManager":{"type":"boolean","description":"Enable IDF Component Manager in build task","scope":"resource","default":false},"idf.enableCCache":{"type":"boolean","description":"Enable CCache in build task","scope":"resource","default":false},"idf.gitPath":{"type":"string","description":"Git executable path","scope":"application","default":"/usr/bin/git"},"idf.gitPathWin":{"type":"string","description":"Git executable path","scope":"application","default":"${env:programfiles}\\Git\\cmd\\git.exe"},"idf.enableUpdateSrcsToCMakeListsFile":{"type":"boolean","description":"Enable update source files in CMakeLists.txt","scope":"window","default":true},"idf.qemuDebugMonitor":{"type":"boolean","description":"Enable QEMU Monitor on debug session","scope":"resource","default":true},"idf.qemuExtraArgs":{"type":"array","description":"QEMU extra arguments","scope":"resource","default":[]},"esp.component-manager.url":{"type":"string","description":"ESP Component Registry URL","scope":"resource","default":"https://components.espressif.com"},"idf.openOcdDebugLevel":{"type":"number","default":2,"enum":[0,1,2,3,4],"enumDescriptions":["Error","Warning","Info","Debug","Verbose"],"scope":"resource","description":"OpenOCD server debug level"},"idf.openOcdLaunchArgs":{"type":"array","default":[],"description":"Arguments to launch openOCD from this extension","scope":"resource","items":{"type":"string"}},"idf.preBuildTask":{"type":"string","default":"","scope":"resource","description":"Pre build custom task"},"idf.postBuildTask":{"type":"string","default":"","scope":"resource","description":"Post build custom task"},"idf.preFlashTask":{"type":"string","default":"","scope":"resource","description":"Pre flash custom task"},"idf.postFlashTask":{"type":"string","default":"","scope":"resource","description":"Post flash custom task"},"idf.customTask":{"type":"string","default":"","scope":"resource","description":"Custom task"},"idf.svdFilePath":{"type":"string","default":"${workspaceFolder}/esp32.svd","scope":"resource","description":"SVD file to resolve ESP-IDF Peripheral View in Debug View"},"idf.deleteComponentsOnFullClean":{"type":"boolean","default":true,"scope":"resource","description":"Delete managed_components on Full Clean Project command"},"idf.monitorDelay":{"type":"number","default":1000,"scope":"resource","description":"Delay to start debug session after IDF monitor execution or breaking monitor session (ms)"},"idf.monitorNoReset":{"type":"boolean","default":false,"scope":"resource","description":"Enable no-reset flag to IDF monitor"},"idf.monitorEnableTimestamps":{"type":"boolean","default":false,"scope":"resource","description":"Enable timestamps in IDF monitor"},"idf.monitorCustomTimestampFormat":{"type":"string","default":"","scope":"resource","description":"Custom timestamp format in IDF monitor"},"idf.enableStatusBar":{"type":"boolean","description":"Enable ESP-IDF extension status bar items","scope":"resource","default":true},"idf.enableSizeTaskAfterBuildTask":{"type":"boolean","description":"Enable IDF size task after build task","scope":"resource","default":true},"idf.customTerminalExecutable":{"type":"string","description":"Absolute path to custom shell terminal executable (default to VS Code Terminal)","scope":"resource","default":""},"idf.customTerminalExecutableArgs":{"type":"array","description":"List of arguments for the custom shell terminal","scope":"resource","default":[],"items":{"type":"string"}},"idf.sdkconfigFilePath":{"type":"string","description":"sdkconfig file absolute path","scope":"resource","default":""},"idf.sbomFilePath":{"type":"string","scope":"resource","default":"espidf.spdx","description":"ESP-IDF SBOM file path"},"idf.enableSerialPortChipIdRequest":{"type":"boolean","scope":"application","default":true,"description":"Enable detecting the chip ID and show on serial port selection list"},"idf.useSerialPortVendorProductFilter":{"type":"boolean","scope":"application","default":false,"description":"Use USB Product ID and Vendor ID to filter known Espressif devices"},"idf.usbSerialPortFilters":{"type":"object","scope":"application","description":"USB serial port Product ID and Vendor ID list to filter","additionalProperties":{"type":"object","properties":{"vendorId":{"type":"string","description":"USB Vendor ID hex number as string, e.g., 0x0403"},"productId":{"type":"string","description":"USB Product ID hex number as string, e.g., 0x6010"}},"additionalProperties":false},"default":{"CP2102/CP2102N":{"vendorId":"0x10c4","productId":"0xea60"},"FT2232H":{"vendorId":"0x0403","productId":"0x6010"},"Espressif USB_SERIAL_JTAG":{"vendorId":"0x303a","productId":"0x1001"},"Espressif esp-usb-bridge firmware":{"vendorId":"0x303a","productId":"0x1002"},"ESP32-S2 USB_CDC":{"vendorId":"0x303a","productId":"0x0002"},"ESP32-S3 USB_CDC":{"vendorId":"0x303a","productId":"0x0009"},"CH9102F":{"vendorId":"0x1a86","productId":"0x55d4"},"CH340T":{"vendorId":"0x1a86","productId":"0x7523"},"FT232R":{"vendorId":"0x0403","productId":"0x6001"}}},"idf.jtagFlashCommandExtraArgs":{"type":"array","description":"OpenOCD JTAG flash extra arguments","scope":"resource","default":["verify","reset"],"items":{"type":"string"}}}}],"commands":[{"command":"espIdf.removeEspIdfSettings","title":"Remove ESP-IDF Settings","category":"ESP-IDF"},{"command":"espIdf.openWalkthrough","title":"ESP-IDF: Open Get Started Walkthrough"},{"command":"espIdf.searchError","title":"ESP-IDF: Search Error Hint"},{"command":"espIdf.createFiles","title":"Create Project from Extension Template","category":"ESP-IDF"},{"command":"espIdf.addArduinoAsComponentToCurFolder","title":"Add Arduino ESP32 as ESP-IDF Component","category":"ESP-IDF"},{"command":"espIdf.createVsCodeFolder","title":"Add VS Code Configuration Folder","category":"ESP-IDF"},{"command":"espIdf.createIdfTerminal","title":"Open ESP-IDF Terminal","category":"ESP-IDF"},{"command":"espIdf.selectConfTarget","title":"Select Where to Save Configuration Settings","category":"ESP-IDF"},{"command":"espIdf.setTarget","title":"Set Espressif Device Target","category":"ESP-IDF"},{"command":"espIdf.menuconfig.start","title":"SDK Configuration Editor (Menuconfig)","category":"ESP-IDF"},{"command":"espIdf.setup.start","title":"Configure ESP-IDF Extension","category":"ESP-IDF"},{"command":"espIdf.examples.start","title":"Show Example Projects","category":"ESP-IDF"},{"command":"espIdf.cmakeListsEditor.start","title":"CMakeLists.txt Editor","category":"ESP-IDF"},{"command":"espIdf.selectPort","title":"Select Port to Use (COM, tty, usbserial)","category":"ESP-IDF","when":"!isWeb"},{"command":"espIdf.selectMonitorPort","title":"Select Monitor Port to Use (COM, tty, usbserial)","category":"ESP-IDF","when":"!isWeb"},{"command":"espIdf.buildDevice","title":"Build Your Project","category":"ESP-IDF"},{"command":"espIdf.buildApp","title":"Build App Only","category":"ESP-IDF"},{"command":"espIdf.flashAppUart","title":"Flash App Only (UART)","category":"ESP-IDF"},{"command":"espIdf.buildBootloader","title":"Build Bootloader Only","category":"ESP-IDF"},{"command":"espIdf.flashBootloaderUart","title":"Flash Bootloader Only (UART)","category":"ESP-IDF"},{"command":"espIdf.buildPartitionTable","title":"Build Partition Table","category":"ESP-IDF"},{"command":"espIdf.flashPartitionTableUart","title":"Flash Partition Table (UART)","category":"ESP-IDF"},{"command":"espIdf.flashDevice","title":"Flash Your Project","category":"ESP-IDF"},{"command":"espIdf.flashUart","title":"Flash (UART) Your Project","category":"ESP-IDF","when":"!isWeb"},{"command":"espIdf.flashDFU","title":"Flash (DFU) Your Project","category":"ESP-IDF","when":"!isWeb"},{"command":"espIdf.flashAndEncryptDevice","title":"Encrypt and Flash Your Project","category":"ESP-IDF","when":"!isWeb"},{"command":"espIdf.monitorDevice","title":"Monitor Device","category":"ESP-IDF"},{"command":"espIdf.buildFlashMonitor","title":"Build, Flash and Start a Monitor on Your Device","category":"ESP-IDF","when":"!isWeb"},{"command":"espIdf.pickAWorkspaceFolder","title":"Pick a Workspace Folder","category":"ESP-IDF"},{"command":"espIdf.size","title":"Size Analysis of the Binaries","category":"ESP-IDF"},{"command":"espIdf.apptrace","title":"App Trace","category":"ESP-IDF"},{"command":"espIdf.heaptrace","title":"Heap Trace","category":"ESP-IDF"},{"command":"espIdf.openOCDCommand","title":"OpenOCD Manager","category":"ESP-IDF"},{"command":"espIdf.partition.table.refresh","title":"Refresh Partition Table","category":"ESP-IDF","icon":"$(refresh)"},{"command":"espIdf.flashBinaryToPartition","category":"ESP-IDF","title":"Flash Binary to Partition..."},{"command":"espIdf.apptrace.archive.refresh","title":"Refresh Trace Archive List","icon":"$(refresh)","category":"ESP-IDF"},{"command":"espIdf.apptrace.archive.showReport","title":"Show Trace Report","category":"ESP-IDF"},{"command":"espIdf.apptrace.customize","title":"Customize Parameters for App Trace","category":"ESP-IDF"},{"command":"esp.rainmaker.backend.connect","title":"Connect with ESP-Rainmaker Cloud Server","category":"ESP-IDF","icon":"$(sign-in)"},{"command":"esp.rainmaker.backend.sync","title":"Sync with ESP-Rainmaker Cloud Server","category":"ESP-IDF","icon":"$(refresh)"},{"command":"esp.rainmaker.backend.logout","title":"Unlink Rainmaker Account","category":"ESP-IDF","icon":"$(sign-out)"},{"command":"esp.rainmaker.backend.add_node","title":"Add New Node","category":"ESP-IDF","icon":"$(add)"},{"command":"esp.rainmaker.backend.remove_node","title":"Remove This Node","category":"ESP-IDF","icon":"$(trash)"},{"command":"esp.rainmaker.backend.update_node_param","title":"Update Param for Device","category":"ESP-IDF","icon":"$(edit)"},{"command":"espIdf.openDocUrl","title":"Open ESP-IDF Documentation...","category":"ESP-IDF"},{"command":"espIdf.clearDocsSearchResult","title":"Clear ESP-IDF Search Results","icon":"$(clear-all)","category":"ESP-IDF"},{"command":"espIdf.genCoverage","title":"Add Editor Coverage","category":"ESP-IDF"},{"command":"espIdf.removeCoverage","title":"Remove Editor Coverage","category":"ESP-IDF"},{"command":"espIdf.getCoverageReport","title":"Get HTML Coverage Report for Project","category":"ESP-IDF"},{"command":"espIdf.launchWSServerAndMonitor","category":"ESP-IDF","title":"Launch IDF Monitor for Core Dump Mode/GDB Stub Mode","when":"!isWeb"},{"command":"espIdf.searchInEspIdfDocs","title":"Search in Documentation...","category":"ESP-IDF"},{"command":"esp.efuse.summary","title":"Get eFuse Summary","category":"ESP-IDF","icon":"$(refresh)"},{"command":"espIdf.efuse.clearResults","title":"Clear eFuse Summary","category":"ESP-IDF","icon":"$(clear-all)"},{"command":"espIdf.getEspAdf","title":"Install ESP-ADF","category":"ESP-IDF"},{"command":"espIdf.getEspMdf","title":"Install ESP-MDF","category":"ESP-IDF"},{"command":"espIdf.getEspMatter","title":"Install ESP-Matter","category":"ESP-IDF"},{"command":"espIdf.getEspRainmaker","title":"Install ESP-Rainmaker","category":"ESP-IDF"},{"command":"espIdf.getEspHomeKitSdk","title":"Install ESP-HomeKit-SDK","category":"ESP-IDF"},{"command":"espIdf.installEspMatterPyReqs","title":"Install ESP-Matter Python Packages","category":"ESP-IDF"},{"command":"espIdf.installPyReqs","title":"Install ESP-IDF Extension Python Packages","category":"ESP-IDF"},{"command":"esp.webview.open.partition-table","title":"ESP-IDF: Open Partition Table Editor UI","icon":"$(output)"},{"command":"espIdf.jtag_flash","title":"Flash (with JTag)","category":"ESP-IDF","when":"!isWeb"},{"command":"espIdf.selectFlashMethodAndFlash","title":"Select Flash Method","category":"ESP-IDF","when":"!isWeb"},{"command":"espIdf.fullClean","title":"Full Clean Project","category":"ESP-IDF"},{"command":"espIdf.webview.nvsPartitionEditor","title":"Open NVS Partition Editor"},{"command":"espIdf.selectOpenOcdConfigFiles","title":"Select OpenOCD Board Configuration","category":"ESP-IDF"},{"command":"espIdf.doctorCommand","title":"Doctor Command","category":"ESP-IDF"},{"command":"espIdf.troubleshootPanel","title":"ESP-IDF: Troubleshoot Form"},{"command":"espIdf.createNewComponent","title":"Create New ESP-IDF Component","category":"ESP-IDF"},{"command":"espIdf.ninja.summary","title":"Show Ninja Build Summary","category":"ESP-IDF"},{"command":"espIdf.disposeConfserverProcess","title":"Dispose of Current SDK Configuration Editor Server Process","category":"ESP-IDF"},{"command":"espIdf.newProject.start","title":"New Project","category":"ESP-IDF"},{"command":"espIdf.eraseFlash","title":"Erase Flash Memory from Device","category":"ESP-IDF"},{"command":"espIdf.setGcovConfig","title":"Configure Project SDKConfig for Coverage","category":"ESP-IDF"},{"command":"esp.component-manager.ui.show","title":"Show ESP Component Registry","category":"ESP-IDF"},{"command":"espIdf.importProject","title":"Import ESP-IDF Project","category":"ESP-IDF"},{"command":"espIdf.qemuCommand","title":"Launch QEMU Server","category":"ESP-IDF"},{"command":"espIdf.createDevContainer","title":"Add Docker Container Configuration","category":"ESP-IDF"},{"command":"espIdf.monitorQemu","title":"Monitor QEMU Device","category":"ESP-IDF"},{"command":"espIdf.qemuDebug","title":"Launch QEMU Debug Session","category":"ESP-IDF"},{"command":"espIdf.customTask","title":"Execute Custom Task","category":"ESP-IDF"},{"command":"espIdf.welcome.start","title":"Welcome","category":"ESP-IDF"},{"command":"espIdf.setMatterDevicePath","title":"Set ESP-MATTER Device Path (ESP_MATTER_DEVICE_PATH)","category":"ESP-IDF"},{"command":"espIdf.projectConfigurationEditor","title":"Open Project Configuration","category":"ESP-IDF"},{"command":"espIdf.projectConf","title":"Select Project Configuration","category":"ESP-IDF"},{"command":"espIdf.clearSavedIdfSetups","title":"Clear Saved ESP-IDF Setups","category":"ESP-IDF"},{"command":"espIdf.selectNotificationMode","title":"Select Output and Notification Mode","category":"ESP-IDF"},{"command":"espIdf.unitTest.installPyTest","title":"Unit Test: Install ESP-IDF PyTest Requirements","category":"ESP-IDF"},{"command":"espIdf.unitTest.buildFlashUnitTestApp","title":"Unit Test: Build and Flash Unit Test App for Testing","category":"ESP-IDF"},{"command":"espIdf.saveDefSdkconfig","title":"ESP-IDF: Save Default SDKCONFIG File (save-defconfig)","category":"ESP-IDF"},{"command":"espIdf.createSbom","title":"Run ESP-IDF-SBOM Vulnerability Check","category":"ESP-IDF"},{"command":"espIdf.selectCurrentIdfVersion","title":"Select Current ESP-IDF Version","category":"ESP-IDF"},{"command":"espIdf.idfReconfigureTask","title":"ESP-IDF: Run idf.py reconfigure Task"},{"command":"espIdf.viewAsHex","title":"View as Hex","category":"ESP-IDF"},{"command":"espIdf.hexView.copyValue","title":"Copy value to clipboard","category":"ESP-IDF","icon":"$(copy)"},{"command":"espIdf.hexView.deleteElement","title":"Delete hex value from list","category":"ESP-IDF","icon":"$(trash)"},{"command":"espIdf.setClangSettings","title":"Configure project for ESP-Clang","category":"ESP-IDF"}],"breakpoints":[{"language":"c"},{"language":"cpp"}],"debuggers":[{"type":"espidf","label":"ESP-IDF","languages":["cpp","c"],"runtime":"python","configurationAttributes":{"launch":{"properties":{"appOffset":{"type":"string","description":"Override build program start address offset (ESP32_APP_FLASH_OFF)"},"debugPort":{"type":"number","description":"Port for ESP-IDF Debug Adapter. Default: 43474","default":43474},"logLevel":{"type":"number","description":"Log Level for ESP-IDF Debug Adapter","default":2},"mode":{"type":"string","description":"ESP-IDF Debug Session Mode","default":"auto","enum":["auto","manual"],"enumDescriptions":["Auto Mode will execute a OpenOCD Server and Debug Adapter in Visual Studio Code","Manual Mode requires you to run OpenOCD and Debug Adapter separately"]},"env":{"type":"object","description":"Environments Variables override in Visual Studio Code launched ESP-IDF Debug Adapter","default":null},"initGdbCommands":{"type":"array","description":"One or more GDB commands to execute in order to setup the underlying debugger. Example: \"initGdbCommands\": [ \"target remote /dev/ttyUSB0\"]","items":{"type":"string","description":"The command to execute","default":""},"default":[]},"gdbinitFile":{"type":"string","description":"gdbinit file path for ESP-IDF Debug Adapter","default":""},"verifyAppBinBeforeDebug":{"type":"boolean","description":"Verify app binaries before debug","default":false},"tmoScaleFactor":{"type":"number","description":"Scale factor for GDB timeout [default:1]","default":1}}}},"initialConfigurations":[{"name":"ESP-IDF Debug: Launch","type":"espidf","request":"launch"}],"configurationSnippets":[{"label":"ESP-IDF Debug: Launch","body":{"name":"ESP-IDF Debug: Launch","type":"espidf","request":"launch"},"description":"A new configuration for launch ESP-IDF projects"}]},{"type":"gdbtarget","label":"Eclipse GDB Target","runtime":"node","configurationAttributes":{"launch":{"properties":{"gdb":{"type":"string","description":"Path to gdb","default":"${command:espIdf.getToolchainGdb}"},"cwd":{"type":"string","description":"Working directory (cwd) to use when launching gdb. Defaults to the directory of the 'program'"},"debugPort":{"type":"number","description":"Port for Debug Adapter server. Default: 43476","default":43476},"runOpenOCD":{"type":"boolean","description":"Run OpenOCD Server","default":true},"environment":{"additionalProperties":{"type":["string","null"]},"default":{},"description":"Environment variables to use when launching gdb, defined as a key-value pairs. Use null value to remove variable. For example:\n\"environment\": {\n  \"VARNAME\": \"value\",\n  \"PATH\": \"/new/item:${env:PATH}\",\n  \"REMOVEME\": null\n}","type":"object"},"program":{"type":"string","description":"Path to the program to be launched","default":"${workspaceFolder}/build/${command:espIdf.getProjectName}.elf"},"gdbAsync":{"type":"boolean","description":"Use mi-async mode for communication with GDB. (defaults to true, always true when gdbNonStop is true)","default":true},"gdbNonStop":{"type":"boolean","description":"Use non-stop mode for controlling multiple threads. (defaults to false)","default":false},"verbose":{"type":"boolean","description":"Produce verbose log output","default":false},"verifyAppBinBeforeDebug":{"type":"boolean","description":"Verify app binaries before debug","default":false},"logFile":{"type":"string","description":"Absolute path to the file to log interaction with gdb"},"openGdbConsole":{"type":"boolean","description":"(UNIX-only) Open a GDB console in your IDE while debugging"},"initCommands":{"type":"array","description":"List of GDB commands sent after attaching to target before loading image on target.","items":{"type":"string"},"default":[]},"initialBreakpoint":{"type":"string","description":"Initial hardware breakpoint being set as 'thb <value>'. For a value 'app_main' result in 'thb app_main' in initCommands. If user set an empty string '' no initial breakpoint will be set and if let undefined it will use the default 'thb app_main'. Ignored if user defines initCommands argument.","default":"app_main"},"preRunCommands":{"type":"array","description":"List of GDB commands sent after loading image on target before resuming target.","items":{"type":"string"},"default":[]},"imageAndSymbols":{"type":"object","default":{},"properties":{"symbolFileName":{"type":"string","description":"If specified, a symbol file to load at the given (optional) offset","default":""},"symbolOffset":{"type":"string","description":"If symbolFileName is specified, the offset used to load","default":""},"imageFileName":{"type":"string","description":"If specified, an image file to load at the given (optional) offset","default":""},"imageOffset":{"type":"string","description":"If imageFileName is specified, the offset used to load","default":""}}},"target":{"type":"object","default":{"connectCommands":["set remotetimeout 20","-target-select extended-remote localhost:3333"]},"properties":{"type":{"type":"string","description":"The kind of target debugging to do. This is passed to -target-select (defaults to remote)","default":"remote"},"parameters":{"type":"array","description":"Target parameters for the type of target. Normally something like localhost:12345. (defaults to `${host}:${port}`)","items":{"type":"string"},"default":[]},"connectCommands":{"type":"array","description":"Commands to execute for target connection. Normally something like [`-target-select extended-remote localhost:3333`]","items":{"type":"string"},"default":["set remotetimeout 20","-target-select extended-remote localhost:3333"]},"host":{"type":"string","description":"Target host to connect to (defaults to 'localhost', ignored if parameters is set)","default":"localhost"},"port":{"type":"string","description":"Target port to connect to (defaults to value captured by serverPortRegExp, ignored if parameters is set)","default":"2331"},"cwd":{"type":"string","description":"Specifies the working directory of server (defaults to the working directory of gdb)","default":""},"environment":{"additionalProperties":{"type":["string","null"]},"default":{},"description":"Environment variables to use when launching server (defaults to the environment used to launch gdb), defined as a key-value pairs. Use null value to remove variable. For example:\n\"environment\": {\n  \"VARNAME\": \"value\",\n  \"PATH\": \"/new/item:${env:PATH}\",\n  \"REMOVEME\": null\n}","type":"object"},"server":{"type":"string","description":"The executable for the target server to launch (e.g. gdbserver or JLinkGDBServerCLExe) (defaults to gdbserver)","default":"gdbserver"},"serverParameters":{"type":"array","description":"Command line arguments passed to server (defaults to --once :0 ${args.program}).","items":{"type":"string"},"default":[]},"serverPortRegExp":{"type":"string","description":"Regular expression to extract port from by examinging stdout/err of server. Once server is launched, port will be set to this if port is not set. Defaults to matching a string like 'Listening on port 41551' which is what gdbserver provides. Ignored if port or parameters is set","default":""},"serverStartupDelay":{"type":"number","description":"Delay after startup before continuing launch, in milliseconds. If serverPortRegExp is provided, it is the delay after that regexp is seen.","default":"0"},"automaticallyKillServer":{"type":"boolean","description":"Automatically kill the launched server when client issues a disconnect (default: true)"},"uart":{"type":"object","description":"Settings related to displaying UART output in the debug console","properties":{"serialPort":{"type":"string","description":"Path to the serial port connected to the UART on the board."},"socketPort":{"type":"string","description":"Target TCP port on the host machine to attach socket to print UART output (defaults to 3456)","default":"3456"},"baudRate":{"type":"number","description":"Baud Rate (in bits/s) of the serial port to be opened (defaults to 115200).","default":115200},"characterSize":{"type":"number","enum":[5,6,7,8],"description":"The number of bits in each character of data sent across the serial line (defaults to 8).","default":8},"parity":{"type":"string","enum":["none","odd","even","mark","space"],"description":"The type of parity check enabled with the transmitted data (defaults to \"none\" - no parity bit sent)","default":"none"},"stopBits":{"type":"number","enum":[1,1.5,2],"description":"The number of stop bits sent to allow the receiver to detect the end of characters and resynchronize with the character stream (defaults to 1).","default":1},"handshakingMethod":{"type":"string","enum":["none","XON/XOFF","RTS/CTS"],"description":"The handshaking method used for flow control across the serial line (defaults to \"none\" - no handshaking)","default":"none"},"eolCharacter":{"type":"string","enum":["LF","CRLF"],"description":"The EOL character used to parse the UART output line-by-line (defaults to \"LF\").","default":"LF"}}}}}}},"attach":{"properties":{"gdb":{"type":"string","description":"Path to gdb","default":"${command:espIdf.getToolchainGdb}"},"cwd":{"type":"string","description":"Working directory (cwd) to use when launching gdb. Defaults to the directory of the 'program'"},"debugPort":{"type":"number","description":"Port for Debug Adapter server. Default: 43476","default":43476},"runOpenOCD":{"type":"boolean","description":"Run OpenOCD Server","default":true},"environment":{"additionalProperties":{"type":["string","null"]},"default":{},"description":"Environment variables to use when launching gdb, defined as a key-value pairs. Use null value to remove variable. For example:\n\"environment\": {\n  \"VARNAME\": \"value\",\n  \"PATH\": \"/new/item:${env:PATH}\",\n  \"REMOVEME\": null\n}","type":"object"},"program":{"type":"string","description":"Path to the program to be debugged","default":"${workspaceFolder}/build/${command:espIdf.getProjectName}.elf"},"gdbAsync":{"type":"boolean","description":"Use mi-async mode for communication with GDB. (defaults to true, always true when gdbNonStop is true)","default":true},"gdbNonStop":{"type":"boolean","description":"Use non-stop mode for controlling multiple threads. (defaults to false)","default":false},"verbose":{"type":"boolean","description":"Produce verbose log output","default":false},"verifyAppBinBeforeDebug":{"type":"boolean","description":"Verify app binaries before debug","default":false},"logFile":{"type":"string","description":"Absolute path to the file to log interaction with gdb"},"openGdbConsole":{"type":"boolean","description":"(UNIX-only) Open a GDB console in your IDE while debugging"},"initCommands":{"type":"array","description":"List of GDB commands sent after attaching to target before loading image on target.","items":{"type":"string"},"default":[]},"initialBreakpoint":{"type":"string","description":"Initial hardware breakpoint being set as 'thb <value>'. For a value 'app_main' result in 'thb app_main' in initCommands. If user set an empty string '' no initial breakpoint will be set and if let undefined it will use the default 'thb app_main'. Ignored if user defines initCommands argument.","default":"app_main"},"preRunCommands":{"type":"array","description":"List of GDB commands sent after loading image on target before resuming target.","items":{"type":"string"},"default":[]},"imageAndSymbols":{"type":"object","default":{},"properties":{"symbolFileName":{"type":"string","description":"If specified, a symbol file to load at the given (optional) offset","default":""},"symbolOffset":{"type":"string","description":"If symbolFileName is specified, the offset used to load","default":""},"imageFileName":{"type":"string","description":"If specified, an image file to load at the given (optional) offset","default":""},"imageOffset":{"type":"string","description":"If imageFileName is specified, the offset used to load","default":""}}},"target":{"type":"object","default":{"connectCommands":["set remotetimeout 20","-target-select extended-remote localhost:3333"]},"properties":{"type":{"type":"string","description":"The kind of target debugging to do. This is passed to -target-select (defaults to remote)","default":"remote"},"parameters":{"type":"array","description":"Target parameters for the type of target. Normally something like localhost:12345. (defaults to `${host}:${port}`)","items":{"type":"string"},"default":[]},"host":{"type":"string","description":"Target host to connect to (defaults to 'localhost', ignored if parameters is set)","default":"localhost"},"port":{"type":"string","description":"Target port to connect to (defaults to value captured by serverPortRegExp, ignored if parameters is set)","default":"2331"},"uart":{"type":"object","description":"Settings related to displaying UART output in the debug console","properties":{"serialPort":{"type":"string","description":"Path to the serial port connected to the UART on the board."},"socketPort":{"type":"string","description":"Target TCP port on the host machine to attach socket to print UART output (defaults to 3456)","default":"3456"},"baudRate":{"type":"number","description":"Baud Rate (in bits/s) of the serial port to be opened (defaults to 115200).","default":115200},"characterSize":{"type":"number","enum":[5,6,7,8],"description":"The number of bits in each character of data sent across the serial line (defaults to 8).","default":8},"parity":{"type":"string","enum":["none","odd","even","mark","space"],"description":"The type of parity check enabled with the transmitted data (defaults to \"none\" - no parity bit sent)","default":"none"},"stopBits":{"type":"number","enum":[1,1.5,2],"description":"The number of stop bits sent to allow the receiver to detect the end of characters and resynchronize with the character stream (defaults to 1).","default":1},"handshakingMethod":{"type":"string","enum":["none","XON/XOFF","RTS/CTS"],"description":"The handshaking method used for flow control across the serial line (defaults to \"none\" - no handshaking)","default":"none"},"eolCharacter":{"type":"string","enum":["LF","CRLF"],"description":"The EOL character used to parse the UART output line-by-line (defaults to \"LF\").","default":"LF"}}},"connectCommands":{"type":"array","description":"Commands to execute for target connection. Normally something like [`-target-select extended-remote localhost:3333`]","items":{"type":"string"},"default":["set remotetimeout 20","-target-select extended-remote localhost:3333"]}}}}}},"initialConfigurations":[{"type":"gdbtarget","request":"attach","name":"Eclipse CDT GDB Adapter"}],"configurationSnippets":[{"label":"Eclipse CDT GDB Adapter","description":"A espidf configuration for remote debugging using GDB.","body":{"type":"gdbtarget","request":"attach","name":"Eclipse CDT GDB Adapter"}}]}],"languages":[{"id":"kconfig","aliases":["Kconfig","kconfig"],"extensions":["Kconfig.projbuild","Kconfig.in","Kconfig"],"configuration":"./kconfig-language-configuration.json"}],"grammars":[{"language":"kconfig","scopeName":"source.kconfig","path":"./syntaxes/kconfig.tmLanguage.json"}],"snippets":[{"language":"kconfig","path":"./snippets/kconfig.code-snippets"}],"taskDefinitions":[{"type":"esp-idf","properties":{"command":{"type":"string","description":"Command to Be Executed"}},"required":["type"]}]},"scripts":{"vscode:prepublish":"webpack --mode production","lint":"prettier --check **/*.*","debugPreTask":"webpack --mode development","compile":"rimraf out && tsc -p ./","watch":"webpack --watch --mode development","test":"yarn compile && node ./out/test/runTest.js --VERBOSE 2>&1","package":"yarn clean && vsce package --yarn -o esp-idf-extension.vsix","release":"vsce publish --yarn -p ${VS_MARKETPLACE_TOKEN} --packagePath esp-idf-extension.vsix","open-vsx-release":"ovsx publish esp-idf-extension.vsix -p ${OPENVSX_MARKETPLACE_TOKEN}","clean":"node clean.js","genLocalizationBundle":"npx @vscode/l10n-dev export --outDir ./l10n ./src","webpack":"webpack --mode production","ui-test":"yarn compile && extest setup-and-run -y -i -u -l DEBUG -o testFiles/testWorkspace/.vscode/settings.json 'out/ui-test/*-test.js'","ci-test":"yarn compile && extest setup-and-run './out/ui-test/*-test.js' -u -s test-resources -o testFiles/testWorkspace/.vscode/settings.json -l DEBUG"},"devDependencies":{"@babel/types":"^7.23.0","@creativebulma/bulma-tooltip":"^1.2.0","@iconify-prerendered/vue-codicon":"^0.23.1693459661","@types/chai":"^4.2.21","@types/d3-scale":"^4.0.5","@types/follow-redirects":"^1.8.0","@types/fs-extra":"^8.0.1","@types/glob":"^7.1.1","@types/jsonic":"^0.3.0","@types/marked":"^4.0.2","@types/mocha":"^9.1.0","@types/nock":"^9.3.1","@types/node":"^20.7.0","@types/plotly.js-dist-min":"^2.3.2","@types/sanitize-html":"^2.6.2","@types/tar-fs":"^2.0.1","@types/tmp":"0.0.33","@types/vscode":"^1.82.0","@types/ws":"^7.2.5","@types/xml2js":"^0.4.11","@types/yauzl":"^2.9.1","@vscode/debugadapter":"^1.65.0","@vscode/debugadapter-testsupport":"^1.51.0","@vscode/debugprotocol":"^1.65.0","@vscode/extension-telemetry":"0.4.8","@vscode/l10n-dev":"^0.0.35","@vscode/test-electron":"^2.1.2","@vue/compiler-sfc":"^3.3.4","bulma":"^0.9.3","chai":"^4.3.4","css-loader":"^3.1.0","d3-scale":"^4.0.2","file-loader":"^6.2.0","filemanager-webpack-plugin":"^8.0.0","glob":"^7.1.4","husky":"^6.0.0","js-yaml":"^4.1.0","jsonic":"^1.0.1","mocha":"^9.2.0","mocha-junit-reporter":"^1.23.3","nock":"^10.0.6","ovsx":"^0.3.0","prettier":"2.0.2","pretty-quick":"^2.0.1","process":"^0.11.10","reflect-metadata":"^0.1.13","rimraf":"^5.0.7","sass":"^1.49.8","sass-loader":"^10","string-replace-loader":"^3.1.0","style-loader":"^3.3.1","ts-loader":"^9.4.4","typescript":"^5.2.2","vite":"^4.5.13","vsce":"^2.6.7","vscode-extension-tester":"7.3.2","vue-hot-reload-api":"^2.3.2","vue-loader":"^17.2.2","vue-router":"^4.2.4","vue-style-loader":"^4.1.3","webpack":"5","webpack-cli":"^4.9.2"},"dependencies":{"@types/js-yaml":"^4.0.5","@vscode/l10n":"^0.0.18","ansi-to-html":"^0.6.11","assert":"^2.1.0","axios":"^1.8.2","bignumber.js":"^9.0.1","del":"^4.1.1","es6-promisify":"^6.0.0","follow-redirects":"^1.15.6","fs-extra":"^8.1.0","https-proxy-agent":"^3.0.0","interactjs":"^1.9.18","marked":"^4.0.12","maska":"^2.1.10","os-browserify":"^0.3.0","path-browserify":"^1.0.1","pinia":"^2.1.6","plotly.js-dist":"^1.54.1","plotly.js-dist-min":"^2.26.1","postcss":"^8.4.31","sanitize-html":"^2.12.1","serialport":"^13.0.0","stream-browserify":"^3.0.0","tar-fs":"^2.1.2","tree-kill":"^1.2.2","utf8":"^3.0.0","vscode-languageclient":"^5.2.1","vscode-languageserver":"^5.2.1","vue":"^3.3.4","winston":"^2.3.1","ws":"^7.5.10","xml2js":"^0.5.0","yauzl":"^2.10.0"},"alias":{"vue":"./node_modules/vue/dist/vue.esm.js"},"azure":{"insight":{"key":"0cc48b26-38e9-453d-81fe-15849ac04c36"}}},"location":{"$mid":1,"path":"/home/cgar/.vscode/extensions/espressif.esp-idf-extension-1.10.2","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Espressif Systems","metadata":{"installedTimestamp":1760655863437,"pinned":false,"source":"gallery","id":"2f6509f0-2abc-4e12-91e8-91b6ff24c654","publisherId":"1ded1e23-8e78-42a7-9058-12957d1c23bf","publisherDisplayName":"Espressif Systems","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":34168839},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"ms-vscode.cmake-tools","uuid":"7c889349-8749-43d4-8b5e-08939936d7f4"},"manifest":{"name":"cmake-tools","displayName":"CMake Tools","description":"Extended CMake support in Visual Studio Code","version":"1.21.36","publisher":"ms-vscode","repository":{"type":"git","url":"https://github.com/microsoft/vscode-cmake-tools"},"license":"MIT","bugs":{"url":"https://github.com/microsoft/vscode-cmake-tools/issues"},"homepage":"https://github.com/microsoft/vscode-cmake-tools","keywords":["cmake","tools","build","c++","native","syntaxes"],"engines":{"vscode":"^1.88.0"},"categories":["Other","Debuggers","Programming Languages"],"galleryBanner":{"color":"#13578c","theme":"dark"},"icon":"res/logo.png","activationEvents":["onCommand:cmake.cacheVariable","onCommand:cmake.activeFolderName","onCommand:cmake.activeFolderPath","onCommand:cmake.activeConfigurePresetName","onCommand:cmake.activeBuildPresetName","onCommand:cmake.activeTestPresetName","onCommand:cmake.activePackagePresetName","onCommand:cmake.activeWorkflowPresetName","onCommand:cmake.buildTargetName","onCommand:cmake.launchTargetPath","onCommand:cmake.launchTargetDirectory","onCommand:cmake.launchTargetFilename","onCommand:cmake.launchTargetName","onCommand:cmake.getLaunchTargetPath","onCommand:cmake.getLaunchTargetDirectory","onCommand:cmake.getLaunchTargetFilename","onCommand:cmake.getlaunchTargetName","onCommand:cmake.buildType","onCommand:cmake.buildDirectory","onCommand:cmake.executableTargets","onCommand:cmake.buildKit","onCommand:cmake.tasksBuildCommand","onDebugResolve:cmake","onDebugInitialConfigurations","onDebugDynamicConfigurations:cmake","workspaceContains:CMakeLists.txt","workspaceContains:*/CMakeLists.txt","workspaceContains:*/*/CMakeLists.txt","workspaceContains:*/*/*/CMakeLists.txt","workspaceContains:.vscode/cmake-kits.json","onFileSystem:cmake-tools-schema","onLanguage:cmake","onLanguage:cmake-cache"],"main":"./dist/main","contributes":{"icons":{"cmake-tools-build":{"description":"CMake build icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E001"}},"cmake-tools-clean-configure":{"description":"CMake clean configure icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E002"}},"cmake-tools-clean":{"description":"CMake clean icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E003"}},"cmake-tools-cmake-view-1":{"description":"CMake view icon 1","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E004"}},"cmake-tools-cmake-view-2":{"description":"CMake view icon 2","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E005"}},"cmake-tools-configure":{"description":"CMake configure icon","default":{"fontPath":"./res/product-icons.woff2","fontCharacter":"\\E006"}}},"languages":[{"id":"cmake","extensions":[".cmake"],"filenames":["CMakelists.txt"],"aliases":["CMake"]},{"id":"cmake-cache","filenames":["CMakeCache.txt"],"aliases":["CMake Cache"]}],"grammars":[{"language":"cmake","scopeName":"source.cmake","path":"./syntaxes/CMake.tmLanguage.json"},{"language":"cmake-cache","scopeName":"source.cmakecache","path":"./syntaxes/CMakeCache.tmLanguage.json"}],"commands":[{"command":"cmake.openCMakePresets","title":"Open CMakePresets.json","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addConfigurePreset","title":"Add Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addBuildPreset","title":"Add Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addTestPreset","title":"Add Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addPackagePreset","title":"Add Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.addWorkflowPreset","title":"Add Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.viewConfigureSettings","title":"View the settings overriding your Configure Preset","when":"cmake:enabelFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.selectConfigurePreset","title":"Select Configure Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.viewBuildSettings","title":"View the settings overriding your Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.selectBuildPreset","title":"Select Build Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.projectStatus.viewTestSettings","title":"View the settings overriding your Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.viewPackageSettings","title":"View the settings overriding your Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectTestPreset","title":"Select Test Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.projectStatus.setTestTarget","title":"Set Test Target","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectPackagePreset","title":"Select Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectPackagePreset","title":"Select Package Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.selectWorkflowPreset","title":"Select Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectWorkflowPreset","title":"Select Workflow Preset","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.viewLog","title":"Open the CMake Tools Log File","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.logDiagnostics","title":"Log Diagnostics","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectActiveFolder","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.selectActiveProject","title":"Select Active Folder","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet","title":"Select Active Folder","icon":"$(gear)"},{"command":"cmake.editKits","title":"Edit User-Local CMake Kits","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.scanForKits","title":"Scan for Kits","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.scanForCompilers","title":"Scan for Compilers","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.selectKit","title":"Select a Kit","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.setVariant","title":"Select Variant","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake","icon":"$(edit)"},{"command":"cmake.setVariantAll","title":"Select Variant for All Projects","when":"cmake:enableFullFeatureSet && !useCMakePresets","category":"CMake"},{"command":"cmake.configure","title":"Configure","category":"CMake"},{"command":"cmake.configureWithDebugger","title":"Configure with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.configure","title":"Configure","icon":"$(cmake-tools-configure)"},{"command":"cmake.projectStatus.configure","title":"Configure","icon":"$(cmake-tools-configure)","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.configureWithDebugger","title":"Configure with CMake Debugger","icon":"$(debug)","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.showConfigureCommand","title":"Show Configure Command","category":"CMake"},{"command":"cmake.configureAll","title":"Configure All Projects","category":"CMake"},{"command":"cmake.configureAllWithDebugger","title":"Configure All Projects with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.configureAll","title":"Configure All Projects","icon":"$(cmake-tools-configure)"},{"command":"cmake.outline.configureAllWithDebugger","title":"Configure All Projects with CMake Debugger","icon":"$(debug)","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.build","title":"Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.projectStatus.build","title":"Build","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.outline.buildTarget","title":"Build","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.showBuildCommand","title":"Show Build Command","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.buildAll","title":"Build All Projects","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.compileFile","title":"Compile Active File","category":"CMake","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.outline.compileFile","title":"Compile File","when":"cmake:enableFullFeatureSet","icon":"$(cmake-tools-build)"},{"command":"cmake.install","title":"Install","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.installAll","title":"Install All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.buildWithTarget","title":"Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.setDefaultTarget","when":"cmake:enableFullFeatureSet","title":"Set Build Target"},{"command":"cmake.projectStatus.setDefaultTarget","title":"Set Build Target","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(edit)"},{"command":"cmake.cleanConfigure","title":"Delete Cache and Reconfigure","category":"CMake"},{"command":"cmake.outline.cleanConfigure","title":"Clean Reconfigure"},{"command":"cmake.projectStatus.cleanConfigure","title":"Delete Cache and Reconfigure","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(cmake-tools-clean-configure)"},{"command":"cmake.projectStatus.openSettings","title":"Open CMake Tools Extension Settings","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(settings-gear)"},{"command":"cmake.projectStatus.openVisibilitySettings","title":"Open Visibility Settings","when":"cmake:enabelFullFeatureSet","category":"CMake","icon":"$(json)"},{"command":"cmake.cleanConfigureWithDebugger","title":"Delete Cache and Reconfigure with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanConfigureWithDebugger","title":"Clean Reconfigure with CMake Debugger","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.cleanConfigureAll","title":"Delete Cache and Reconfigure All Projects","category":"CMake"},{"command":"cmake.outline.cleanConfigureAll","title":"Clean Reconfigure All Projects"},{"command":"cmake.cleanConfigureAllWithDebugger","title":"Delete Cache and Reconfigure All Projects with CMake Debugger","category":"CMake","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","title":"Clean Reconfigure All Projects with CMake Debugger","enablement":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.clean","title":"Clean","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet","title":"Clean","icon":"$(cmake-tools-clean)"},{"command":"cmake.cleanAll","title":"Clean All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet","title":"Clean All Projects"},{"command":"cmake.cleanRebuild","title":"Clean Rebuild","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuild","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild"},{"command":"cmake.cleanRebuildAll","title":"Clean Rebuild All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet","title":"Clean Rebuild All Projects"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)","category":"CMake"},{"command":"cmake.outline.editCacheUI","when":"cmake:enableFullFeatureSet","title":"Edit CMake Cache (UI)"},{"command":"cmake.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.ctest","title":"Run Tests","when":"cmake:enableFullFeatureSet","icon":"$(beaker)","category":"CMake"},{"command":"cmake.ctestAll","title":"Run Tests for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.revealTestExplorer","title":"Reveal Test Explorer","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.refreshTests","title":"Refresh Tests","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.refreshTestsAll","title":"Refresh Tests for All Projects","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled","category":"CMake"},{"command":"cmake.cpack","title":"Run CPack","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.cpack","title":"Run CPack","when":"cmake:enableFullFeatureSet && useCMakePresets","icon":"$(package)","category":"CMake"},{"command":"cmake.workflow","title":"Run Workflow","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.projectStatus.workflow","title":"Run Workflow","when":"cmake:enableFullFeatureSet && useCMakePresets","icon":"$(run)","category":"CMake"},{"command":"cmake.cpackAll","title":"Run CPack for All Projects","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.workflowAll","title":"Run Workflow for All Projects","when":"cmake:enableFullFeatureSet && useCMakePresets","category":"CMake"},{"command":"cmake.editCache","title":"Edit CMake Cache","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.quickStart","title":"Quick Start","category":"CMake"},{"command":"cmake.debugTarget","title":"Debug","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug"},{"command":"cmake.projectStatus.debugTarget","when":"cmake:enableFullFeatureSet","title":"Debug","category":"CMake","icon":"$(debug-alt)"},{"command":"cmake.debugTargetAll","title":"Debug All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.setDebugTarget","when":"cmake:enableFullFeatureSet","title":"Set Launch/Debug Target","icon":"$(edit)"},{"command":"cmake.launchTarget","title":"Run Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal"},{"command":"cmake.projectStatus.launchTarget","when":"cmake:enableFullFeatureSet","title":"Run in Terminal","category":"CMake","icon":"$(run)"},{"command":"cmake.launchTargetAll","title":"Run All Projects Without Debugging","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.selectLaunchTarget","title":"Set Launch/Debug Target","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set Launch/Debug Target"},{"command":"cmake.projectStatus.setLaunchTarget","when":"cmake:enableFullFeatureSet","title":"Set Launch/Debug Target","icon":"$(edit)"},{"command":"cmake.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.projectStatus.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","category":"CMake","icon":"$(x)"},{"command":"cmake.outline.stop","title":"Cancel Build","when":"cmake:enableFullFeatureSet","icon":"$(x)"},{"command":"cmake.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","category":"CMake"},{"command":"cmake.outline.stopAll","title":"Cancel Build for All Projects","when":"cmake:enableFullFeatureSet","icon":"$(x)"},{"command":"cmake.resetState","title":"Reset CMake Tools Extension State (For troubleshooting)","category":"CMake"},{"command":"cmake.openSettings","title":"Open CMake Tools Extension Settings","category":"CMake"},{"command":"cmake.outline.runUtilityTarget","when":"cmake:enableFullFeatureSet","title":"Run Utility"},{"command":"cmake.outline.revealInCMakeLists","when":"cmake:enableFullFeatureSet","title":"Open CMakeLists.txt"},{"command":"cmake.projectStatus.update","when":"cmake:enableFullFeatureSet","title":"Refresh the project status","category":"CMake","icon":"$(refresh)"},{"command":"cmake.pinnedCommands.add","when":"cmake:enableFullFeatureSet","title":"Add a CMake command to pin","category":"CMake","icon":"$(add)"},{"command":"cmake.pinnedCommands.remove","when":"cmake:enableFullFeatureSet","title":"Unpin Command","category":"CMake","icon":"$(remove)"},{"command":"cmake.pinnedCommands.run","when":"cmake:enableFullFeatureSet","title":"Run Command","category":"CMake","icon":"$(play-circle)"},{"command":"cmake.appendBuildDirectoryToWorkspace","when":"cmake:enableFullFeatureSet","title":"Append Build Directory to Current Workspace","category":"CMake"}],"taskDefinitions":[{"type":"cmake","required":["command"],"properties":{"label":{"type":"string","description":"The name of the task"},"command":{"type":"string","enum":["build","configure","install","test","clean","cleanRebuild"],"description":"CMake command"},"targets":{"type":"array","items":{"type":"string"},"description":"CMake build targets"},"preset":{"type":"string","description":"CMake preset name. This is a configuration, build or test preset, based on the CMake command"},"options":{"type":"object","description":"Additional command options","properties":{"cwd":{"type":"string","description":"The current working directory of the executed program or script. If omitted Code's current workspace root is used."},"environment":{"type":"object","markdownDescription":"Environment variables in the format of \"name\": \"value\"."}}},"detail":{"type":"string","description":"Additional details of the task"}}}],"breakpoints":[{"language":"cmake"}],"debuggers":[{"type":"cmake","label":"CMake Debugger","languages":["cmake"],"configurationAttributes":{"launch":{"properties":{"scriptPath":{"type":"string","descripttion":"The path to the script to debug.","default":"script.cmake"},"scriptArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments for the script to debug."},"scriptEnv":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name"},"value":{"type":"string","description":"Value"}}},"default":[],"description":"Environment for the script to use."},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""},"pipeName":{"type":"string","description":"Name of the pipe (on Windows) or domain socket (on Unix) to use for debugger communication.","default":""},"clean":{"type":"boolean","description":"Clean prior to configuring.","default":false},"configureAll":{"type":"boolean","description":"Configure for all projects.","default":false},"cmakeDebugType":{"type":"string","enum":["configure","external","script"],"description":"The type of the CMake debug session. Available options are: \"configure\", \"external\", \"script\"."}},"required":["cmakeDebugType"],"oneOf":[{"properties":{"cmakeDebugType":{"enum":["script"]},"scriptPath":{"type":"string","description":"The path to the script to debug.","default":""},"scriptArgs":{"type":"array","items":{"type":"string"},"default":[],"description":"Arguments for the script to debug."},"scriptEnv":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name"},"value":{"type":"string","description":"Value"}}},"default":[],"description":"Environment for the script to use."},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""}},"required":["scriptPath"]},{"properties":{"cmakeDebugType":{"enum":["configure"]},"clean":{"type":"boolean","description":"Clean prior to configuring.","default":false},"configureAll":{"type":"boolean","description":"Configure for all projects.","default":false},"dapLog":{"type":"string","description":"Where the debugger DAP log should be logged.","default":""}}},{"properties":{"cmakeDebugType":{"enum":["external"]}},"required":["pipeName"]}]}},"initialConfigurations":[],"configurationSnippets":[{"label":"CMake: Configure","description":"Debug a CMake project configuration","body":{"type":"cmake","request":"launch","name":"CMake: Configure project","cmakeDebugType":"configure","clean":false,"configureAll":false}},{"label":"CMake: Script","description":"Debug a CMake script","body":{"type":"cmake","request":"launch","name":"CMake: Script debugging","cmakeDebugType":"script","scriptPath":"^\"\\${workspaceFolder}/<...>.cmake\""}},{"label":"CMake: External","description":"Connect to an externally launched CMake invocation","body":{"type":"cmake","request":"launch","name":"CMake: Externally launched","cmakeDebugType":"external","pipeName":"<...>"}}]}],"menus":{"commandPalette":[{"command":"cmake.openCMakePresets","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addPackagePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.addWorkflowPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectConfigurePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectBuildPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectTestPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectPackagePreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectWorkflowPreset","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.viewLog","when":"cmake:enableFullFeatureSet"},{"command":"cmake.configure"},{"command":"cmake.configureWithDebugger","when":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.showConfigureCommand"},{"command":"cmake.scanForKits","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.scanForCompilers","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.selectKit","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.editKits","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.quickStart"},{"command":"cmake.selectActiveFolder","when":"cmake:enableFullFeatureSet"},{"command":"cmake.resetState"},{"command":"cmake.openSettings"},{"command":"cmake.configureAll","when":"cmake:multiProject"},{"command":"cmake.configureAllWithDebugger","when":"cmake:multiProject && cmake:cmakeDebuggerAvailable"},{"command":"cmake.build","when":"cmake:enableFullFeatureSet"},{"command":"cmake.showBuildCommand","when":"cmake:enableFullFeatureSet"},{"command":"cmake.buildAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.install","when":"cmake:enableFullFeatureSet"},{"command":"cmake.installAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.buildWithTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"cmake:enableFullFeatureSet"},{"command":"cmake.setVariant","when":"cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.setVariantAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && !useCMakePresets"},{"command":"cmake.setDefaultTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanConfigure"},{"command":"cmake.cleanConfigureAll","when":"cmake:multiProject"},{"command":"cmake.cleanConfigureWithDebugger","when":"cmake:cmakeDebuggerAvailable"},{"command":"cmake.cleanConfigureAllWithDebugger","when":"cmake:multiProject && cmake:cmakeDebuggerAvailable"},{"command":"cmake.clean","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.cleanRebuild","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cleanRebuildAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.editCacheUI","when":"cmake:enableFullFeatureSet"},{"command":"cmake.ctest","when":"cmake:enableFullFeatureSet"},{"command":"cmake.cpack","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.workflow","when":"cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.ctestAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.cpackAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.workflowAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && useCMakePresets"},{"command":"cmake.revealTestExplorer","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.refreshTests","when":"cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.refreshTestsAll","when":"cmake:multiProject && cmake:enableFullFeatureSet && cmake:testExplorerIntegrationEnabled"},{"command":"cmake.editCache","when":"cmake:enableFullFeatureSet"},{"command":"cmake.debugTarget","when":"!cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.debugTargetAll","when":"cmake:multiProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTarget","when":"!cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.launchTargetAll","when":"cmake:multiProject && !cmake:hideLaunchCommand && cmake:enableFullFeatureSet"},{"command":"cmake.selectLaunchTarget","when":"cmake:enableFullFeatureSet"},{"command":"cmake.stop","when":"cmake:enableFullFeatureSet"},{"command":"cmake.stopAll","when":"cmake:multiProject && cmake:enableFullFeatureSet"},{"command":"cmake.logDiagnostics","when":"cmake:enableFullFeatureSet"},{"command":"cmake.outline.configure","when":"never"},{"command":"cmake.outline.configureAll","when":"never"},{"command":"cmake.outline.configureWithDebugger","when":"never"},{"command":"cmake.outline.configureAllWithDebugger","when":"never"},{"command":"cmake.outline.build","when":"never"},{"command":"cmake.outline.buildAll","when":"never"},{"command":"cmake.outline.compileFile","when":"never"},{"command":"cmake.outline.selectWorkspace","when":"never"},{"command":"cmake.outline.cleanConfigure","when":"never"},{"command":"cmake.outline.cleanConfigureAll","when":"never"},{"command":"cmake.outline.cleanConfigureWithDebugger","when":"never"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"never"},{"command":"cmake.outline.clean","when":"never"},{"command":"cmake.outline.cleanAll","when":"never"},{"command":"cmake.outline.cleanRebuild","when":"never"},{"command":"cmake.outline.cleanRebuildAll","when":"never"},{"command":"cmake.outline.editCacheUI","when":"never"},{"command":"cmake.outline.stop","when":"never"},{"command":"cmake.outline.stopAll","when":"never"},{"command":"cmake.outline.buildTarget","when":"never"},{"command":"cmake.outline.runUtilityTarget","when":"never"},{"command":"cmake.outline.debugTarget","when":"never"},{"command":"cmake.outline.launchTarget","when":"never"},{"command":"cmake.outline.setDefaultTarget","when":"never"},{"command":"cmake.outline.setLaunchTarget","when":"never"},{"command":"cmake.outline.revealInCMakeLists","when":"never"},{"command":"cmake.projectStatus.update","when":"never"},{"command":"cmake.pinnedCommands.add","when":"never"},{"command":"cmake.pinnedCommands.remove","when":"never"},{"command":"cmake.pinnedCommands.run","when":"never"},{"command":"cmake.projectStatus.stop","when":"never"},{"command":"cmake.projectStatus.selectKit","when":"never"},{"command":"cmake.projectStatus.configure","when":"never"},{"command":"cmake.projectStatus.cleanConfigure","when":"never"},{"command":"cmake.projectStatus.openSettings","when":"never"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"never"},{"command":"cmake.projectStatus.setVariant","when":"never"},{"command":"cmake.projectStatus.selectConfigurePreset","when":"never"},{"command":"cmake.projectStatus.viewConfigureSettings","when":"never"},{"command":"cmake.projectStatus.build","when":"never"},{"command":"cmake.projectStatus.viewBuildSettings","when":"never"},{"command":"cmake.projectStatus.setDefaultTarget","when":"never"},{"command":"cmake.projectStatus.selectBuildPreset","when":"never"},{"command":"cmake.projectStatus.viewTestSettings","when":"never"},{"command":"cmake.projectStatus.viewPackageSettings","when":"never"},{"command":"cmake.projectStatus.selectPackagePreset","when":"never"},{"command":"cmake.projectStatus.selectWorkflowPreset","when":"never"},{"command":"cmake.projectStatus.ctest","when":"never"},{"command":"cmake.projectStatus.cpack","when":"never"},{"command":"cmake.projectStatus.workflow","when":"never"},{"command":"cmake.projectStatus.debugTarget","when":"never"},{"command":"cmake.projectStatus.launchTarget","when":"never"},{"command":"cmake.projectStatus.setDebugTarget","when":"never"},{"command":"cmake.projectStatus.setLaunchTarget","when":"never"},{"command":"cmake.projectStatus.selectActiveProject","when":"never"},{"command":"cmake.projectStatus.selectTestPreset","when":"never"},{"command":"cmake.projectStatus.setTestTarget","when":"never"}],"view/title":[{"command":"cmake.projectStatus.update","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@1"},{"command":"cmake.projectStatus.cleanConfigure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@2"},{"command":"cmake.projectStatus.stop","when":"view == cmake.projectStatus && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.projectStatus.openSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && !cmake:isBuilding","group":"navigation@1"},{"command":"cmake.outline.configureAllWithDebugger","when":"view == cmake.outline && !cmake:isBuilding && cmake:cmakeDebuggerAvailable","group":"navigation@2"},{"command":"cmake.outline.buildAll","when":"view == cmake.outline && !cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@3"},{"command":"cmake.outline.stopAll","when":"view == cmake.outline && cmake:isBuilding && cmake:enableFullFeatureSet","group":"navigation@4"},{"command":"cmake.outline.cleanAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"view == cmake.outline && cmake:cmakeDebuggerAvailable","group":"1_cmakeOutline"},{"command":"cmake.outline.cleanRebuildAll","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.outline.editCacheUI","when":"view == cmake.outline && cmake:enableFullFeatureSet","group":"1_cmakeOutline"},{"command":"cmake.pinnedCommands.add","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"navigation@1"}],"view/item/context":[{"command":"cmake.projectStatus.stop","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'stop'","group":"inline"},{"command":"cmake.projectStatus.selectKit","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'kit'","group":"inline"},{"command":"cmake.projectStatus.configure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'configure'","group":"inline"},{"command":"cmake.projectStatus.cleanConfigure","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'cleanConfigure'","group":"inline"},{"command":"cmake.projectStatus.openSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'openSettings'","group":"inline"},{"command":"cmake.projectStatus.openVisibilitySettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'openVisibilitySettings'","group":"inline"},{"command":"cmake.projectStatus.setVariant","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'variant'","group":"inline"},{"command":"cmake.projectStatus.selectConfigurePreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /configPreset/","group":"inline"},{"command":"cmake.projectStatus.viewConfigureSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'configPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.build","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'build'","group":"inline"},{"command":"cmake.projectStatus.setDefaultTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'buildTarget'","group":"inline"},{"command":"cmake.projectStatus.selectBuildPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /buildPreset/","group":"inline"},{"command":"cmake.projectStatus.viewBuildSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'buildPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.ctest","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'test'","group":"inline"},{"command":"cmake.projectStatus.cpack","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'package' && useCMakePresets","group":"inline"},{"command":"cmake.projectStatus.workflow","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'workflow' && useCMakePresets","group":"inline"},{"command":"cmake.projectStatus.setTestTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'testTarget'","group":"inline"},{"command":"cmake.projectStatus.selectTestPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /testPreset/","group":"inline"},{"command":"cmake.projectStatus.viewTestSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'testPreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.viewPackageSettings","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'packagePreset - overrides present'","group":"inline"},{"command":"cmake.projectStatus.selectPackagePreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem =~ /packagePreset/","group":"inline"},{"command":"cmake.projectStatus.selectWorkflowPreset","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'workflowPreset'","group":"inline"},{"command":"cmake.projectStatus.debugTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debug'","group":"inline"},{"command":"cmake.projectStatus.setDebugTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'debugTarget'","group":"inline"},{"command":"cmake.projectStatus.launchTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'launch'","group":"inline"},{"command":"cmake.projectStatus.setLaunchTarget","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'launchTarget'","group":"inline"},{"command":"cmake.projectStatus.selectActiveProject","when":"view == cmake.projectStatus && cmake:enableFullFeatureSet && viewItem == 'activeProject'","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true|canRun=true/","group":"inline"},{"command":"cmake.outline.buildTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canBuild=true/","group":"1_targetActions@1"},{"command":"cmake.outline.runUtilityTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true/","group":"1_targetActions@2"},{"command":"cmake.outline.debugTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@3"},{"command":"cmake.outline.launchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/","group":"1_targetActions@4"},{"command":"cmake.outline.revealInCMakeLists","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /nodeType=target/","group":"1_targetActions@5"},{"command":"cmake.outline.setDefaultTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /canRun=true|canBuild=true/ && viewItem =~ /isDefault=false/","group":"2_targetState@1"},{"command":"cmake.outline.setLaunchTarget","when":"view == cmake.outline && cmake:enableFullFeatureSet && viewItem =~ /type=EXECUTABLE/ && viewItem =~ /isLaunch=false/","group":"2_targetState@2"},{"command":"cmake.outline.configureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@1"},{"command":"cmake.outline.configureAllWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"1_fileActions@2"},{"command":"cmake.outline.buildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@3"},{"command":"cmake.outline.cleanAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@4"},{"command":"cmake.outline.cleanConfigureAll","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@5"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"1_fileActions@5"},{"command":"cmake.outline.cleanRebuildAll","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"1_fileActions@6"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"1_fileActions@7"},{"command":"cmake.outline.configure","when":"view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@1"},{"command":"cmake.outline.build","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@2"},{"command":"cmake.outline.clean","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=project/","group":"inline@3"},{"command":"cmake.outline.compileFile","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /compilable=true/","group":"inline"},{"command":"cmake.outline.configure","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/","group":"inline"},{"command":"cmake.outline.configureWithDebugger","when":"view == cmake.outline && viewItem =~ /nodeType=file/ && viewItem =~ /cmakelists=true/ && cmake:cmakeDebuggerAvailable","group":"inline"},{"command":"cmake.outline.selectWorkspace","when":"cmake:enableFullFeatureSet && view == cmake.outline && viewItem =~ /nodeType=workspace/ && viewItem =~ /selected=false/","group":"inline"},{"command":"cmake.pinnedCommands.remove","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"pinnedCommands@1"},{"command":"cmake.pinnedCommands.run","when":"view == cmake.pinnedCommands && cmake:enableFullFeatureSet","group":"inline"}],"editor/title/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"}],"editor/title":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet","group":"navigation"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet","group":"navigation"}],"explorer/context":[{"command":"cmake.compileFile","when":"resourceLangId == cpp && cmake:enableFullFeatureSet"},{"command":"cmake.compileFile","when":"resourceLangId == c && cmake:enableFullFeatureSet"},{"command":"cmake.outline.configureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.configureAllWithDebugger","when":"resourceFilename == CMakeLists.txt && cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.buildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"},{"command":"cmake.outline.cleanConfigureAll","when":"resourceFilename == CMakeLists.txt"},{"command":"cmake.outline.cleanConfigureAllWithDebugger","when":"resourceFilename == CMakeLists.txt && cmake:cmakeDebuggerAvailable"},{"command":"cmake.outline.cleanRebuildAll","when":"resourceFilename == CMakeLists.txt && cmake:enableFullFeatureSet"}],"touchBar":[{"command":"cmake.quickStart","when":"cmake:enableTouchBar && !cmake:enableFullFeatureSet","group":"CMake:start"},{"command":"cmake.configure","when":"cmake:enableTouchBar.configure && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.build","alt":"cmake.configure","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && !cmake:isBuilding && !cmake:isConfiguring","group":"CMake:build"},{"command":"cmake.stop","when":"cmake:enableTouchBar.build && cmake:enableFullFeatureSet && cmake:isBuilding","group":"CMake:build"},{"command":"cmake.debugTarget","alt":"cmake.selectLaunchTarget","when":"cmake:enableTouchBar.debug && cmake:enableFullFeatureSet && !cmake:hideDebugCommand","group":"CMake:run"},{"command":"cmake.launchTarget","when":"cmake:enableTouchBar.launch && cmake:enableFullFeatureSet && !cmake:hideLaunchCommand","group":"CMake:run"}]},"configuration":{"type":"object","title":"CMake Tools","properties":{"cmake.autoSelectActiveFolder":{"type":"boolean","default":true,"description":"Select active folder automatically.","scope":"window"},"cmake.defaultActiveFolder":{"type":"string","default":"","description":"Set the default active folder (only works when cmake.autoSelectActiveFolder is disable).","scope":"window"},"cmake.exclude":{"type":"array","items":{"type":"string"},"default":[],"description":"The extension will ignore the folders listed in this setting. The folders should be listed as absolute paths.","scope":"window"},"cmake.cmakePath":{"type":"string","default":"cmake","description":"Name/path of the CMake executable to use.","scope":"resource"},"cmake.buildDirectory":{"type":"string","default":"${workspaceFolder}/build","description":"The directory where CMake build files will go.","scope":"resource"},"cmake.installPrefix":{"type":"string","default":null,"description":"The directory where CMake installed files will go.","scope":"resource"},"cmake.sourceDirectory":{"oneOf":[{"type":"string"},{"type":"array","items":{"type":"string"}}],"description":"Path or array of paths to the CMakeLists.txt root directory/directories.","default":"${workspaceFolder}","scope":"resource"},"cmake.saveBeforeBuild":{"type":"boolean","default":true,"description":"Save open files before building.","scope":"resource"},"cmake.buildBeforeRun":{"type":"boolean","default":true,"description":"Build the target before running it.","scope":"resource"},"cmake.clearOutputBeforeBuild":{"type":"boolean","default":true,"description":"Clear build output before each build.","scope":"resource"},"cmake.configureSettings":{"type":"object","default":{},"additionalProperties":{"oneOf":[{"type":"string"},{"type":"boolean"},{"type":"number"},{"type":"array","items":{"type":"string"}},{"type":"object","properties":{"type":{"type":"string","enum":["","BOOL","STRING","FILEPATH","PATH"]},"value":{}},"additionalProperties":false,"required":["type","value"]}]},"description":"CMake variables to set on the command line. This setting is specific to kits and will not be used for CMake Presets.","scope":"resource"},"cmake.cacheInit":{"oneOf":[{"type":"string","description":"Path to a cache-initializing CMake file."},{"type":"array","description":"List of cache initializer files.","items":{"type":"string","description":"A cache initializing CMake file."}}],"description":"Provide cache-initializing CMake file(s).","scope":"resource"},"cmake.preferredGenerators":{"type":"array","default":[],"description":"The preferred CMake generator(s) to use when configuring (tried in order of listing).","scope":"resource"},"cmake.generator":{"type":"string","default":null,"description":"The CMake generator to use.","scope":"resource"},"cmake.toolset":{"type":"string","default":null,"description":"The CMake toolset to use when configuring.","scope":"resource"},"cmake.platform":{"type":"string","default":null,"description":"The CMake platform to use when configuring.","scope":"resource"},"cmake.configureArgs":{"type":"array","description":"Additional arguments to pass to CMake when configuring. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active configure preset.","items":{"type":"string","title":"CMake Arguments"},"default":[],"scope":"resource"},"cmake.buildArgs":{"type":"array","description":"Additional arguments to pass to CMake when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.buildToolArgs":{"type":"array","description":"Additional arguments to pass to the underlying build tool when building. When using CMake Presets, these arguments are temporarily appended to the arguments provided by the active build preset to invoke the build tool.","items":{"type":"string"},"default":[],"scope":"resource"},"cmake.parallelJobs":{"type":"number","default":0,"description":"The number of parallel build jobs. Use zero to automatically detect the number of CPUs. Setting this to 1 will omit the parallelism flag (-j) from the underlying build command, which has a generator-dependent effect on build parallelism.","scope":"resource"},"cmake.ctestPath":{"type":"string","default":null,"description":"Path to CTest executable. If null, will be inferred from cmake.cmakePath (recommended to leave null).","scope":"resource"},"cmake.cpackPath":{"type":"string","default":null,"when":"useCMakePresets == true","description":"Path to CPack executable. If null, will be inferred from cmake.cmakePath (recommended to leave null). Will be ignored when kits are used instead of presets.","scope":"resource"},"cmake.ctest.parallelJobs":{"type":"number","default":0,"markdownDescription":"The number of parallel test jobs. Use zero to use the value of `#cmake.parallelJobs#`. This only applies when `#cmake.ctest.allowParallelJobs#` is set to `true`.","scope":"resource"},"cmake.ctest.allowParallelJobs":{"type":"boolean","default":false,"description":"Allows ctests to be run in parallel, however the result output may be garbled as a result and the Test Explorer may not accurately reflect test progress.","scope":"resource"},"cmake.ctest.testExplorerIntegrationEnabled":{"type":"boolean","default":true,"description":"Whether or not the integration with the test explorer is enabled. This is helpful to disable if you prefer using a different extension for test integration.","scope":"machine-overridable"},"cmake.ctest.testSuiteDelimiter":{"type":"string","default":null,"markdownDescription":"Optional delimiter used to separate test suite names and group tests hierarchically in the Test Explorer. This string is used in a Regular Expression, so some delimiters may need escaping. Examples: `-` ( One delimiter: `-`), `\\.|::` (Two delimiters: `.` or `::`. Note that `.` needs to be escaped.)","scope":"machine-overridable"},"cmake.ctest.testSuiteDelimiterMaxOccurrence":{"type":"number","default":0,"markdownDescription":"Maximum number of times the delimiter may be used to split the name of the test. `0` means no limit.","scope":"machine-overridable"},"cmake.ctest.debugLaunchTarget":{"type":"string","default":null,"description":"Target name from launch.json to start when debugging a test with CTest. By default and in case of a non-existing target, this will show a picker with all available targets.","scope":"resource"},"cmake.parseBuildDiagnostics":{"type":"boolean","default":true,"description":"Parse compiler output for warnings and errors.","scope":"resource"},"cmake.enabledOutputParsers":{"type":"array","markdownDescription":"Output parsers to use. Supported parsers `cmake`, `gcc`, `gnuld` for GNULD-style linker output, `msvc` for Microsoft Visual C++, `ghs` for the Green Hills compiler with --no_wrap_diagnostics --brief_diagnostics, and `diab` for the Wind River Diab compiler.","items":{"type":"string","enum":["cmake","gcc","gnuld","msvc","ghs","diab","iar"]},"default":["cmake","gcc","gnuld","msvc","ghs","diab"],"scope":"resource"},"cmake.debugConfig":{"type":"object","description":"The debug configuration to use when debugging a target.","properties":{"symbolSearchPath":{"type":"string","description":"Visual Studio debugger symbol search paths."},"additionalSOLibSearchPath":{"type":"string","description":"Paths for GDB or LLDB to search for .so files."},"externalConsole":{"type":"boolean","description":"Launch an external console for the program."},"console":{"type":"string","enum":["internalConsole","integratedTerminal","externalTerminal","newExternalWindow"],"enumDescriptions":["Output to the VS Code Debug Console. This doesn't support reading console input (ex:`std::cin` or `scanf`).","VS Code's integrated terminal.","Console applications will be launched in an external terminal window. The window will be reused in relaunch scenarios and will not automatically disappear when the application exits.","Console applications will be launched in their own external console window which will end when the application stops. Non-console applications will run without a terminal, and stdout/stderr will be ignored."],"markdownDescription":"Where to launch the debug target. Defaults to `internalConsole` if not defined."},"logging":{"type":"object","description":"Tell what types of messages should be logged to the console.","properties":{"exceptions":{"type":"boolean","default":true},"moduleLoad":{"type":"boolean","default":true},"programOutput":{"type":"boolean","default":true},"engineLogging":{"type":"boolean","default":false},"trace":{"type":"boolean","default":false},"traceResponse":{"type":"boolean","default":false}}},"visualizerFile":{"anyOf":[{"type":"string","default":""},{"type":"array","default":[],"items":{"type":"string"}}],"description":".natvis file to be used when debugging."},"args":{"type":"array","description":"Arguments to pass to program command line.","items":{"type":"string"},"default":[]},"cwd":{"type":"string","description":"Set the working directory for the program."},"environment":{"type":"array","items":{"type":"object","properties":{"name":{"type":"string","description":"Name of environment variable."},"value":{"type":"string","description":"Value for the environment variable."}}}},"MIMode":{"type":"string","enum":["gdb","lldb"]},"miDebuggerPath":{"type":"string","description":"Path to gdb or lldb debugger."},"stopAtEntry":{"type":"boolean","description":"Stop at the entry point of the target.","default":false},"setupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"customLaunchSetupCommands":{"type":"array","description":"Command to set up gdb or lldb.","items":{"type":"object","properties":{"text":{"type":"string","description":"Command to run."},"description":{"type":"string","description":"Description of the command."},"ignoreFailures":{"type":"boolean","default":false}}}},"launchCompleteCommand":{"type":"string"},"dumpPath":{"type":"string"},"coreDumpPath":{"type":"string"}},"scope":"resource"},"cmake.defaultVariants":{"type":"object","$schema":"cmake-tools-schema://schemas/variants-schema.json","description":"Configure the default variant settings.","default":{"buildType":{"default":"debug","description":"The build type.","choices":{"debug":{"short":"Debug","long":"Disable optimizations - include debug information.","buildType":"Debug"},"release":{"short":"Release","long":"Optimize for speed - exclude debug information.","buildType":"Release"},"minsize":{"short":"MinSizeRel","long":"Optimize for smallest binary size - exclude debug information.","buildType":"MinSizeRel"},"reldeb":{"short":"RelWithDebInfo","long":"Optimize for speed - include debug information.","buildType":"RelWithDebInfo"},"unspecified":{"short":"Unspecified","long":"Let CMake pick the default build type.","buildType":"Unspecified"}}}},"scope":"resource"},"cmake.ctestArgs":{"type":"array","items":{"type":"string"},"description":"Additional arguments to pass to CTest. When using CMake Presets, these arguments are temporarily added to the arguments provided by the active test preset.","default":[],"scope":"resource"},"cmake.ctestDefaultArgs":{"type":"array","items":{"type":"string"},"description":"Arguments passed by default to CTest.","default":["-T","test","--output-on-failure"],"scope":"machine-overridable"},"cmake.cpackArgs":{"type":"array","when":"useCMakePresets == true","items":{"type":"string"},"description":"Additional arguments to pass to CPack (only when using presets, not supported for kits). These arguments are temporarily added to the arguments provided by the active package preset.","default":[],"scope":"resource"},"cmake.environment":{"type":"object","default":{},"description":"Environment variables to set when running CMake commands. When using CMake Presets, these are temporarily added to the environment used for CMake commands.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.configureEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during configure. When using CMake Presets, these are temporarily added to the environment provided by the active configure preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.buildEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CMake during build. When using CMake Presets, these are temporarily added to the environment provided by the active build preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.testEnvironment":{"type":"object","default":{},"description":"Environment variables to pass to CTest. When using CMake Presets, these are temporarily added to the environment provided by the active test preset.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.cpackEnvironment":{"type":"object","default":{},"when":"useCMakePresets == true","description":"Environment variables to set when packaging with CPack (only when using presets, not supported for kits). These are temporarily added to the environment used for CPack runs.","additionalProperties":{"type":"string","description":"Value for the environment variable."},"scope":"resource"},"cmake.mingwSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where MinGW may be installed.","scope":"window","markdownDeprecationMessage":"**Deprecated**: Please use `#cmake.additionalCompilerSearchDirs#` instead."},"cmake.additionalCompilerSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Additional directories to search for compilers.","scope":"window"},"cmake.emscriptenSearchDirs":{"type":"array","items":{"type":"string","description":"Path to a directory."},"default":[],"description":"Directories where Emscripten may be installed.","scope":"window"},"cmake.mergedCompileCommands":{"type":"string","default":null,"description":"Recursively collect and merge all compile_commands.json found in the cmake.buildDirectory.","scope":"resource"},"cmake.copyCompileCommands":{"type":"string","default":null,"description":"Copy compile_commands.json to this location after a successful configure.","scope":"resource"},"cmake.configureOnOpen":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when they are opened.","scope":"resource"},"cmake.configureOnEdit":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when cmake.sourceDirectory or CMakeLists.txt content are saved.","scope":"resource"},"cmake.deleteBuildDirOnCleanConfigure":{"type":"boolean","default":false,"description":"Delete the entire build directory when a clean configure is invoked.","scope":"resource"},"cmake.setBuildTypeOnMultiConfig":{"type":"boolean","default":false,"description":"Set CMAKE_BUILD_TYPE also on multi config generators.","scope":"resource"},"cmake.skipConfigureIfCachePresent":{"type":"boolean","default":null,"description":"Skip over the configure process if cache is present.","scope":"resource"},"cmake.cmakeCommunicationMode":{"type":"string","default":"automatic","enum":["legacy","serverApi","fileApi","automatic"],"description":"The protocol used to communicate between the extension and CMake.","scope":"resource"},"cmake.showSystemKits":{"type":"boolean","default":true,"description":"Include system kits in kit selection.","scope":"resource"},"cmake.ignoreKitEnv":{"type":"boolean","default":false,"description":"Do not use the kit environment variables when running CMake commands.","scope":"resource"},"cmake.buildTask":{"type":"boolean","default":false,"description":"Build using tasks.json instead of internal process.","scope":"resource"},"cmake.outputLogEncoding":{"type":"string","default":"auto","description":"Encoding of the output from external commands (eg.cmake -- build).","scope":"window"},"cmake.enableTraceLogging":{"type":"boolean","default":false,"description":"Enable trace logging to file and console (very noisy).","scope":"window"},"cmake.loggingLevel":{"type":"string","default":"info","description":"Tell what types of messages should be logged to the console.","enum":["trace","debug","info","note","warning","error","fatal"],"scope":"window"},"cmake.touchbar.visibility":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."],"scope":"window"},"cmake.touchbar.advanced":{"type":"object","scope":"window","description":"Configures advanced settings for how the extension displays buttons on a MacBook Touch Bar.","properties":{"build":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"configure":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"debug":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]},"launch":{"type":"string","default":"default","description":"Configures how the extension displays the buttons on a MacBook Touch Bar.","enum":["default","hidden"],"enumDescriptions":["Show Touch Bar buttons on supported systems.","Do not show Touch Bar buttons."]}}},"cmake.showConfigureWithDebuggerNotification":{"type":"boolean","default":true,"description":"Enables the pop-up that asks the user if, upon a failed configure, they want to configure with the CMake Debugger.","scope":"application"},"cmake.showNotAllDocumentsSavedQuestion":{"type":"boolean","default":true,"description":"Enables the pop-up that asks the user if they want to continue the build despite some files possibly not being saved. If not enabled, the build will be continued.","scope":"application"},"cmake.options.statusBarVisibility":{"type":"string","default":"hidden","markdownDescription":"Configures how the extension displays the options in the Status Bar. These settings may be overwritten by the more specific `#cmake.options.advanced.statusBarVisibility#` setting. [More info](https://aka.ms/cmaketoolsoptionsconfiguration).","enum":["visible","compact","icon","hidden"],"scope":"window"},"cmake.options.advanced":{"type":"object","default":{"build":{"statusBarVisibility":"inherit","inheritDefault":"visible"},"launch":{"statusBarVisibility":"inherit","inheritDefault":"visible"},"debug":{"statusBarVisibility":"inherit","inheritDefault":"visible"}},"markdownDescription":"Configures the settings for individual Project Status View and status bar options. These settings may overwrite the more general `#cmake.options.statusBarVisibility#` setting. [More info](https://aka.ms/cmaketoolsoptionsconfiguration).","properties":{"configure":{"type":"object","properties":{"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"configurePreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"buildPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"testPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"packagePreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"workflowPreset":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"kit":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"variant":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the status message removed.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]}}},"folder":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"buildTarget":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"build":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"launchTarget":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","hidden"]},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20}}},"debug":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"launch":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","icon","hidden"]},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"ctest":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on test results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"cpack":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"default":"hidden","markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on cpack results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}},"workflow":{"type":"object","properties":{"statusBarVisibility":{"type":"string","markdownDescription":"Configures the settings for individual status bar options. These settings overwrite the more general `#cmake.options.statusBarVisibility#` setting.","enum":["visible","compact","icon","hidden","inherit"],"default":"hidden","markdownEnumDescriptions":["Show the status bar option at full size.","Show the status bar option's icon only.","Show the status bar option with the text truncated to the length specified in `#cmake.status.advanced.statusBarLength#` (default is 20).","Hides the status bar option.","If the more general `#cmake.options.statusBarVisibility#` setting is set to `hidden`, this defaults to what is set in the `#cmake.options.advanced.inheritDefault#` setting, else this inherits the `#cmake.options.statusBarVisibility#` setting."]},"inheritDefault":{"type":"string","markdownDescription":"Configures what the `#cmake.options.advanced.statusBarVisibility#` setting's `inherit` option defaults to if `#cmake.options.statusBarVisibility#` is set to `hidden`. This has the same options as the `#cmake.options.advanced.statusBarVisibility#` setting, minus the `inherit` option.","enum":["visible","compact","icon","hidden"]},"color":{"type":"boolean","default":false,"description":"Enables a change in color for this option depending on workflow run results."},"statusBarLength":{"description":"Configures the maximum length of visible text in the Status Bar when set to `compact` mode.","type":"integer","default":20},"projectStatusVisibility":{"type":"string","description":"Configures how the extension displays this option the Project Status View.","enum":["visible","hidden"],"enumDescriptions":["Show the node in the Project Status View.","Hide the node and its children in the Project Status View."]}}}}},"cmake.additionalKits":{"type":"array","default":[],"description":"Array of paths to custom kit files.","items":{"type":"string"},"scope":"resource"},"cmake.revealLog":{"type":"string","default":"always","enum":["focus","always","never","error"],"enumDescriptions":["The log appears and the output channel takes the cursor focus.","The log appears but the output channel doesn't take the cursor focus.","The log neither appears nor takes the focus.","The log appears only when the build or the configuration fails."],"description":"Configures the settings for showing the log and focusing on the output channel."},"cmake.exportCompileCommandsFile":{"type":"boolean","default":true,"description":"Enables exporting compile_commands.json. This only is used in Kits scenarios. In Presets scenarios, please set this by using CMakePresets.json","scope":"resource"},"cmake.useCMakePresets":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"Use CMakePresets.json to configure drive CMake configure, build, and test. When using CMakePresets.json, kits, variants, and some settings in settings.json will be ignored.","scope":"resource"},"cmake.useVsDeveloperEnvironment":{"type":"string","enum":["always","never","auto"],"default":"auto","description":"When using CMake Presets on Windows, use the Visual Studio environment as the parent environment. Selecting auto will only apply the Visual Studio environment when we detect a supported compiler (cl, clang, clang-cl, clang-cpp, clang++), or the Ninja generator is being used.","scope":"resource"},"cmake.allowCommentsInPresetsFile":{"type":"boolean","default":false,"description":"Allow the use of JSON extensions such as comments in CMakePresets.json. Please note that your CMakePresets.json file may be considered invalid by other IDEs or on the command line if you use non-standard JSON.","scope":"resource"},"cmake.allowUnsupportedPresetsVersions":{"type":"boolean","default":false,"description":"Enables the use of presets files that are using features from the versions that CMake Tools extension doesn't currently support. Unknown properties and macros will be ignored.","scope":"resource"},"cmake.launchBehavior":{"type":"string","enum":["reuseTerminal","breakAndReuseTerminal","newTerminal"],"markdownEnumDescriptions":["The launch terminal instance is reused and the target will launch as soon as the terminal is idle.","The launch terminal instance is reused and a `break` command is sent to terminate any active foreground process before launching the target.","A new terminal instance is created and the target is launched in it. Existing terminals are not automatically cleaned up."],"description":"Controls what happens with the launch terminal when you launch a target.","default":"reuseTerminal"},"cmake.ignoreCMakeListsMissing":{"type":"boolean","default":false,"markdownDescription":"If `true`, the extension will not ask the user to select a CMakeLists.txt file for configuration when one is found in the workspace but not in the root folder.","scope":"resource"},"cmake.loadCompileCommands":{"type":"boolean","default":true,"description":"Controls whether the extension reads compile_commands.json to enable single file compilation.","scope":"resource"},"cmake.automaticReconfigure":{"type":"boolean","default":true,"description":"Automatically configure CMake project directories when the kit or the configuration preset is changed.","scope":"resource"},"cmake.pinnedCommands":{"type":"array","items":{"type":"string"},"description":"List of CMake commands to always pin by default. These will appear in the CMake Tools sidebar 'Pinned Commands' section.","default":["workbench.action.tasks.configureTaskRunner","workbench.action.tasks.runTask"],"scope":"resource"},"cmake.enableAutomaticKitScan":{"type":"boolean","default":true,"description":"Enable automatic scanning for kits when a kit isn't selected. This will only take affect when CMake Presets aren't being used.","scope":"resource"},"cmake.enableLanguageServices":{"type":"boolean","default":true,"description":"Enable language services for CMake files. This will enable syntax highlighting, code completion, and other features.","scope":"machine"},"cmake.preRunCoverageTarget":{"type":"string","default":null,"description":"Target to build before running tests with coverage using the test explorer","scope":"resource"},"cmake.postRunCoverageTarget":{"type":"string","default":null,"description":"Target to build after running tests with coverage using the test explorer","scope":"resource"},"cmake.coverageInfoFiles":{"type":"array","items":{"type":"string"},"default":[],"description":"LCOV coverage info files to be processed after running tests with coverage using the test explorer.","scope":"resource"},"cmake.useFolderPropertyInBuildTargetDropdown":{"type":"boolean","default":false,"description":"Controls if the default build target dropdown is grouped by the CMake folder groups.","scope":"resource"}}},"keybindings":[{"key":"f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.build"},{"key":"shift+f7","when":"!cmake:hideBuildCommand && cmake:enableFullFeatureSet","command":"cmake.buildWithTarget"},{"key":"shift+f5","command":"cmake.debugTarget","when":"!inDebugMode && inCMakeProject && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"},{"key":"shift+ctrl+f5","command":"cmake.launchTarget","when":"!inDebugMode && !cmake:hideDebugCommand && cmake:enableFullFeatureSet"}],"viewsContainers":{"activitybar":[{"id":"cmake-view","title":"CMake","icon":"$(cmake-tools-cmake-view-2)","when":"cmake:enableFullFeatureSet"}]},"views":{"cmake-view":[{"id":"cmake.projectStatus","name":"Project Status","when":"cmake:enableFullFeatureSet"},{"id":"cmake.outline","name":"Project Outline","when":"cmake:enableFullFeatureSet"},{"id":"cmake.pinnedCommands","name":"Pinned Commands","when":"cmake:enableFullFeatureSet"}]},"viewsWelcome":[{"view":"cmake.pinnedCommands","contents":"No CMake commands have been pinned yet.\n[Add Command](command:cmake.pinnedCommands.add)","when":"cmake:enableFullFeatureSet"}],"yamlValidation":[{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema://schemas/variants-schema.json"}],"jsonValidation":[{"fileMatch":"cmake-variants.json","url":"cmake-tools-schema://schemas/variants-schema.json"},{"fileMatch":"cmake-variants.yaml","url":"cmake-tools-schema://schemas/variants-schema.json"},{"fileMatch":"cmake-kits.json","url":"cmake-tools-schema://schemas/kits-schema.json"},{"fileMatch":"CMakePresets.json","url":"cmake-tools-schema://schemas/CMakePresets-v10-schema.json"},{"fileMatch":"CMakeUserPresets.json","url":"cmake-tools-schema://schemas/CMakePresets-v10-schema.json"}]},"_moduleAliases":{"@cmt":"out/src/","@test":"out/test/"},"scripts":{"compile":"yarn install && webpack --mode development","compile-watch":"yarn install && webpack --mode development --watch --progress","compile-production":"yarn install && yarn run translations-generate && webpack --env BUILD_VSCODE_NLS=true --mode production","translations-export":"gulp translations-export","translations-generate":"gulp translations-generate","translations-import":"gulp translations-import","package":"vsce package --yarn -o cmake-tools.vsix","pretest":"tsc -p test.tsconfig.json","lint":"gulp lint","smokeTests":"yarn run pretest && node ./out/test/smoke/badProject/runTest.js && node ./out/test/smoke/goodProject/runTest.js && node ./out/test/smoke/noCtest/runTest.js","unitTests":"yarn run pretest && node ./out/test/unit-tests/runTest.js","integrationTests":"yarn run pretest && node ./out/test/integration-tests/runTest.js","endToEndTestsSuccessfulBuild":"yarn run pretest && node ./out/test/end-to-end-tests/successful-build/runTest.js","endToEndTestsSingleRoot":"yarn run pretest && node ./out/test/end-to-end-tests/single-root-UI/runTest.js","endToEndTestsMultiRoot":"yarn run pretest && node ./out/test/end-to-end-tests/multi-root-UI/runTest.js","backendTests":"node ./node_modules/mocha/bin/_mocha -u tdd --timeout 999999 --colors -r ts-node/register -r tsconfig-paths/register ./test/unit-tests/backend/**/*.test.ts","build-product-icon-font":"yarn --cwd ./tools/product-icon-font-generator/ install && yarn --cwd ./tools/product-icon-font-generator/ build && node ./tools/product-icon-font-generator/dist/index.js --source-directory ./res/product-icons/ --output-directory ./res/ --woff2"},"devDependencies":{"@octokit/rest":"^18.1.1","@types/ajv":"^0.0.5","@types/chai":"^4.2.15","@types/chai-as-promised":"^7.1.3","@types/chai-string":"^1.4.2","@types/demangler-js":"^0.1.0","@types/js-yaml":"^4.0.0","@types/json5":"~0.0.30","@types/lodash":"4.14.202","@types/mocha":"^8.2.2","@types/node":"^20.14.2","@types/rimraf":"^3.0.0","@types/sinon":"~9.0.10","@types/tmp":"^0.2.0","@types/vscode":"1.88.0","@types/which":"~2.0.0","@types/xml2js":"^0.4.8","@types/uuid":"~8.3.3","@typescript-eslint/eslint-plugin":"^5.25.0","@typescript-eslint/eslint-plugin-tslint":"^5.25.0","@typescript-eslint/parser":"^5.25.0","@vscode/test-electron":"^2.3.8","@vscode/vsce":"^3.1.0","chai":"^4.3.0","chai-as-promised":"^7.1.1","chai-string":"^1.5.0","eslint":"^8.15.0","eslint-plugin-import":"^2.29.1","eslint-plugin-jsdoc":"^48.2.8","event-stream":"^4.0.1","fs-extra":"^9.1.0","glob":"^7.1.6","gulp":"^4.0.2","gulp-eslint":"^6.0.0","gulp-filter":"^6.0.0","gulp-mocha":"^8.0.0","gulp-sourcemaps":"^3.0.0","gulp-typescript":"^5.0.1","husky":"^4.3.8","jsonc-parser":"^3.0.0","mocha":"^8.3.2","module-alias":"^2.2.2","node-loader":"^1.0.2","parse-git-config":"^3.0.0","sinon":"~9.2.4","ts-loader":"^8.0.17","ts-node":"^9.1.1","tsconfig-paths":"^3.11.0","tslint":"^6.1.3","typescript":"^4.1.5","vscode-cmake-tools":"^1.2.0","vscode-nls-dev":"^3.3.2","webpack":"^5.94.0","webpack-cli":"^4.5.0"},"dependencies":{"@friedemannsommer/lcov-parser":"^5.0.0","@types/string.prototype.matchall":"^4.0.4","ajv":"^7.1.0","chokidar":"^3.5.1","demangler-js":"^0.1.7","handlebars":"^4.7.7","iconv-lite":"^0.6.2","js-yaml":"^4.0.0","json5":"^2.2.2","minimist":"^1.2.6","open":"^7.4.1","p-limit":"^3.1.0","rimraf":"^3.0.2","string.prototype.matchall":"^4.0.10","tmp":"^0.2.1","vscode-cpptools":"^6.1.0","@vscode/extension-telemetry":"^0.9.6","vscode-nls":"^5.0.0","vscode-tas-client":"^0.1.45","which":"~2.0.2","xml2js":"^0.5.0","uuid":"~8.3.2","lodash":"^4.17.21"},"resolutions":{"ansi-regex":"^5.0.1","chokidar":"^3.5.1","glob-parent":"^5.1.2","hosted-git-info":"^3.0.8","https-proxy-agent":"^5.0.0","**/minimist":"^1.2.5","nanoid":"^3.1.31","postcss":"^8.2.10","yargs-parser":"^20.2.4","xml2js":"^0.5.0","tsconfig-paths*/json5":"^1.0.2","minimatch":"^3.0.5","**/braces":"^3.0.3"},"packageManager":"yarn@1.22.19"},"location":{"$mid":1,"path":"/home/cgar/.vscode/extensions/ms-vscode.cmake-tools-1.21.36","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"Microsoft","metadata":{"installedTimestamp":1760657889480,"source":"gallery","id":"7c889349-8749-43d4-8b5e-08939936d7f4","publisherId":"5f5636e7-69ed-4afe-b5d6-8d231fb3d3ee","publisherDisplayName":"Microsoft","targetPlatform":"undefined","updated":false,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"size":25390700},"isValid":true,"validations":[],"preRelease":false},{"type":1,"identifier":{"id":"monokai.theme-monokai-pro-vscode","uuid":"f5d7ffda-c1d6-4070-ba80-803c705a1ee6"},"manifest":{"name":"theme-monokai-pro-vscode","displayName":"Monokai Pro","description":"‚ú® Professional dark & light theme + icon pack, from the author of the original Monokai color scheme.","publisher":"monokai","version":"2.0.9","pricing":"Trial","engines":{"vscode":"^1.14.0"},"categories":["Themes"],"capabilities":{"untrustedWorkspaces":{"supported":true}},"contributes":{"commands":[{"command":"monokai_pro.enter_license","title":"Monokai Pro: enter license"},{"command":"monokai_pro.select_theme","title":"Monokai Pro: select theme"},{"command":"monokai_pro.activate_icons","title":"Monokai Pro: activate icons"}],"themes":[{"label":"Monokai Pro","uiTheme":"vs-dark","path":"./themes/Monokai Pro.json"},{"label":"Monokai Pro (Filter Octagon)","uiTheme":"vs-dark","path":"./themes/Monokai Pro (Filter Octagon).json"},{"label":"Monokai Pro (Filter Ristretto)","uiTheme":"vs-dark","path":"./themes/Monokai Pro (Filter Ristretto).json"},{"label":"Monokai Pro (Filter Spectrum)","uiTheme":"vs-dark","path":"./themes/Monokai Pro (Filter Spectrum).json"},{"label":"Monokai Pro (Filter Machine)","uiTheme":"vs-dark","path":"./themes/Monokai Pro (Filter Machine).json"},{"label":"Monokai Pro Light","uiTheme":"vs","path":"./themes/Monokai Pro Light.json"},{"label":"Monokai Pro Light (Filter Sun)","uiTheme":"vs","path":"./themes/Monokai Pro Light (Filter Sun).json"},{"label":"Monokai Classic","uiTheme":"vs-dark","path":"./themes/Monokai Classic.json"}],"iconThemes":[{"label":"Monokai Pro Icons","id":"Monokai Pro Icons","path":"./icon-themes/Monokai Pro icon-theme.json"},{"label":"Monokai Pro Monochrome Icons","id":"Monokai Pro Monochrome Icons","path":"./icon-themes/Monokai Pro monochrome icon-theme.json"},{"label":"Monokai Pro (Filter Octagon) Icons","id":"Monokai Pro (Filter Octagon) Icons","path":"./icon-themes/Monokai Pro (Filter Octagon) icon-theme.json"},{"label":"Monokai Pro (Filter Octagon) Monochrome Icons","id":"Monokai Pro (Filter Octagon) Monochrome Icons","path":"./icon-themes/Monokai Pro (Filter Octagon) monochrome icon-theme.json"},{"label":"Monokai Pro (Filter Ristretto) Icons","id":"Monokai Pro (Filter Ristretto) Icons","path":"./icon-themes/Monokai Pro (Filter Ristretto) icon-theme.json"},{"label":"Monokai Pro (Filter Ristretto) Monochrome Icons","id":"Monokai Pro (Filter Ristretto) Monochrome Icons","path":"./icon-themes/Monokai Pro (Filter Ristretto) monochrome icon-theme.json"},{"label":"Monokai Pro (Filter Spectrum) Icons","id":"Monokai Pro (Filter Spectrum) Icons","path":"./icon-themes/Monokai Pro (Filter Spectrum) icon-theme.json"},{"label":"Monokai Pro (Filter Spectrum) Monochrome Icons","id":"Monokai Pro (Filter Spectrum) Monochrome Icons","path":"./icon-themes/Monokai Pro (Filter Spectrum) monochrome icon-theme.json"},{"label":"Monokai Pro (Filter Machine) Icons","id":"Monokai Pro (Filter Machine) Icons","path":"./icon-themes/Monokai Pro (Filter Machine) icon-theme.json"},{"label":"Monokai Pro (Filter Machine) Monochrome Icons","id":"Monokai Pro (Filter Machine) Monochrome Icons","path":"./icon-themes/Monokai Pro (Filter Machine) monochrome icon-theme.json"},{"label":"Monokai Pro Light Icons","id":"Monokai Pro Light Icons","path":"./icon-themes/Monokai Pro Light icon-theme.json"},{"label":"Monokai Pro Light Monochrome Icons","id":"Monokai Pro Light Monochrome Icons","path":"./icon-themes/Monokai Pro Light monochrome icon-theme.json"},{"label":"Monokai Pro Light (Filter Sun) Icons","id":"Monokai Pro Light (Filter Sun) Icons","path":"./icon-themes/Monokai Pro Light (Filter Sun) icon-theme.json"},{"label":"Monokai Pro Light (Filter Sun) Monochrome Icons","id":"Monokai Pro Light (Filter Sun) Monochrome Icons","path":"./icon-themes/Monokai Pro Light (Filter Sun) monochrome icon-theme.json"},{"label":"Monokai Classic Icons","id":"Monokai Classic Icons","path":"./icon-themes/Monokai Classic icon-theme.json"},{"label":"Monokai Classic Monochrome Icons","id":"Monokai Classic Monochrome Icons","path":"./icon-themes/Monokai Classic monochrome icon-theme.json"}],"configuration":{"type":"object","title":"Monokai Pro Settings","properties":{"monokaiPro.fileIconsMonochrome":{"type":"boolean","default":false,"description":"makes the file icons monochrome"}}}},"extensionKind":["ui","workspace"],"homepage":"https://monokai.pro","bugs":{"url":"https://github.com/monokai-pro/vscode"},"sponsor":{"url":"https://monokai.pro/vscode"},"galleryBanner":{"color":"#fdf9f3","theme":"light"},"icon":"icon.png","keywords":["beautiful functionality","focus","icons","dark","light"],"main":"./js/main","browser":"./js/browser","license":"SEE LICENSE IN LICENSE","activationEvents":["onStartupFinished"],"qna":false},"location":{"$mid":1,"path":"/home/cgar/.vscode/extensions/monokai.theme-monokai-pro-vscode-2.0.9","scheme":"file"},"isBuiltin":false,"targetPlatform":"undefined","publisherDisplayName":"monokai","metadata":{"isApplicationScoped":false,"isMachineScoped":false,"isBuiltin":false,"installedTimestamp":1760904443031,"pinned":false,"source":"gallery","id":"f5d7ffda-c1d6-4070-ba80-803c705a1ee6","publisherId":"f1aa9b60-e034-4838-a0dc-4a6a074cf48e","publisherDisplayName":"monokai","targetPlatform":"undefined","updated":true,"private":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false,"preRelease":false,"size":735323},"isValid":true,"validations":[],"preRelease":false}]}